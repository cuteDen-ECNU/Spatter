{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((64 61),(15 18),(38 22),(38 52),(24 10),(27 28),(34 79))',0), 1, 0, 0, 1,-981,-718));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-727,990));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((21 4,69 42 ,22 64 ,44 80 ,21 4)))',0), 1, 0, 0, 1,-994,-74));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING((71 9,32 19 ,71 9))',0), 1, 0, 0, 1,-416,-93));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(66 44)',0), 1, 0, 0, 1,-773,-341));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,663,187));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POINT(28 59)',0), 1, 0, 0, 1,763,166));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING EMPTY,GEOMETRYCOLLECTION(POINT(4 95),MULTILINESTRING((33 43,48 40 ,33 43), (36 16,36 2 ))))',0), 1, 0, 0, 1,266,517));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-71,213));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOINT((4 72),(60 18),(71 23),(81 99),(44 12),(73 90),(14 60),(30 68),(32 86))',0), 1, 0, 0, 1,-160,-906));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}