{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((76 3,5 58 ,76 3))',0), 1, 0, 0, 1,127,-147));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,731,-679));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PolygonFromText('POLYGON((5 52,3 30 ,46 27 ,5 23 ,78 100 ,41 100 ,81 39 ,5 52))',0), 1, 0, 0, 1,233,569));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-610,-680));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((31 72,86 27 ,66 87 ,61 61 ,31 72)),((11 31,78 49 ,15 17 ,66 81 ,11 31)),((66 49,77 73 ,86 88 ,13 88 ,66 49)),((49 56,66 48 ,90 79 ,78 70 ,49 56)))',0), 1, 0, 0, 1,957,-460));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MLineFromText('MULTILINESTRING((69 54,71 80 ), (18 41,40 42 ))',0), 1, 0, 0, 1,825,494));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PointFromText('POINT(24 75)',0), 1, 0, 0, 1,51,274));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POINT(72 73)',0), 1, 0, 0, 1,195,-396));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(38 68)',0), 1, 0, 0, 1,-671,-656));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PointFromText('POINT(12 16)',0), 1, 0, 0, 1,-386,-63));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}