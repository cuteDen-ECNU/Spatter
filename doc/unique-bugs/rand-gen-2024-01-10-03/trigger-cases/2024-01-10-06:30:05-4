{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(34 63)',0), 1, 0, 0, 1,708,366));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((7 0,52 47 ,35 54 ,65 54 ,7 0)),((54 46,4 3 ,18 48 ,23 21 ,54 46)),((85 86,92 64 ,11 38 ,77 67 ,85 86)))',0), 1, 0, 0, 1,20,-212));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((26 86),(21 57))',0), 1, 0, 0, 1,-800,126));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((26 61,90 79 ,26 24 ,46 6 ,26 61)),((66 48,13 99 ,49 32 ,40 87 ,66 48)),((82 74,21 91 ,6 49 ,74 12 ,82 74)))',0), 1, 0, 0, 1,189,-889));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((86 45,74 48 ,84 37 ,89 10 ,86 45)),((73 55,21 36 ,56 66 ,76 11 ,73 55)))',0), 1, 0, 0, 1,702,948));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING((38 19,8 91 ,38 19), (11 1,15 84 ))',0), 1, 0, 0, 1,937,126));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('LINESTRING(57 6,10 83 ,1 69 ,57 6)',0), 1, 0, 0, 1,-194,-219));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,992,401));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT((8 55),(88 57),(97 2),(42 94),(46 23),(17 86),(48 74))',0), 1, 0, 0, 1,-592,260));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-748,-277));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}