{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((77 25),(37 31),(100 99),(72 90),(87 20),(1 43),(77 0))',0), 1, 0, 0, 1,-597,-805));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING((4 97,13 87 ))',0), 1, 0, 0, 1,847,-950));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(26 16,56 66 ,27 79 )',0), 1, 0, 0, 1,-975,-528));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((1 2,45 65 ,50 77 ,35 64 ,54 88 ,1 2)),((42 68,33 16 ,83 83 ,47 88 ,28 9 ,42 68)),((93 69,60 51 ,64 6 ,21 47 ,43 1 ,93 69)))',0), 1, 0, 0, 1,-634,52));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(41 99)',0), 1, 0, 0, 1,492,511));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,364,193));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PointFromText('POINT(95 39)',0), 1, 0, 0, 1,-475,317));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,130,-839));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT((46 43),(8 22),(95 64),(60 99),(60 3),(39 22),(57 89),(13 35),(19 96),(82 71))',0), 1, 0, 0, 1,35,-337));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,401,327));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Multi(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}