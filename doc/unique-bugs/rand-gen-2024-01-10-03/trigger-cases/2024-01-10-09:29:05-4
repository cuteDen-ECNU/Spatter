{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT((53 54),(54 47),(0 46),(60 78))',0), 1, 0, 0, 1,657,207));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((25 28),(11 0),(92 21),(40 9),(47 9),(29 17),(6 86),(69 57),(18 81),(18 35))', 0)), 1, 0, 0, 1,361,-365));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-24,-119));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((50 16,32 53 ,9 2 ,66 53 ,21 32 ,39 14 ,83 43 ,50 16))',0), 1, 0, 0, 1,-565,-570));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_LineFromText('LINESTRING(11 56,94 19 ,34 49 )',0), 1, 0, 0, 1,179,331));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,687,-994));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PolygonFromText('POLYGON((7 20,49 25 ,21 4 ,29 38 ,83 28 ,6 29 ,7 20))',0), 1, 0, 0, 1,-330,703));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING((41 2,21 47 ))',0), 1, 0, 0, 1,-769,-282));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTILINESTRING((44 63,35 71 ,96 72 ), (6 66,91 51 ,22 83 ))',0), 1, 0, 0, 1,320,811));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-684,-253));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}