{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 962)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(32,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 962)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(24,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((46 9),(10 85),(79 72),(78 31),(13 70),(25 1),(9 9),(8 89),(82 62),(86 15))', 0)), 1, 0, 0, 1,652,256));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(28 68,43 6 ,4 52 ,28 68)',0), 1, 0, 0, 1,585,787));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(43 51)',0), 1, 0, 0, 1,629,47));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT((5 30),(81 29),(35 90),(2 38))',0), 1, 0, 0, 1,704,-343));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT((51 81),(4 57)),LINESTRING EMPTY)',0), 1, 0, 0, 1,89,645));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPointFromText('MULTIPOINT((48 93),(37 13),(81 60),(50 43),(80 71),(92 85),(57 82),(60 32))',0), 1, 0, 0, 1,-825,-415));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-452,-791));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POINT(55 14)',0), 1, 0, 0, 1,-875,279));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(35 28)',0), 1, 0, 0, 1,514,994));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTILINESTRING((58 36,71 36 ), (57 50,67 37 ))',0), 1, 0, 0, 1,638,-226));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}