{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(15 33)',0), 1, 0, 0, 1,-880,-333));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(82 1,91 17 ,54 15 ,82 1)',0), 1, 0, 0, 1,130,-675));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-134,-474));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING((80 56,43 83 ), (70 39,59 58 )))',0), 1, 0, 0, 1,-436,124));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(97 10)',0), 1, 0, 0, 1,184,-341));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(10 23)',0), 1, 0, 0, 1,45,-901));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POLYGON((46 49,13 76 ,47 86 ,61 92 ,10 12 ,7 31 ,16 98 ,30 94 ,38 69 ,46 49))',0), 1, 0, 0, 1,-594,-943));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((81 53,66 27 ,68 13 ,0 49 ,18 17 ,81 53)),((30 40,34 80 ,52 11 ,94 46 ,32 33 ,30 40)),((56 91,38 50 ,22 45 ,81 20 ,10 95 ,56 91)),((90 69,89 40 ,80 23 ,51 64 ,53 55 ,90 69)))',0), 1, 0, 0, 1,987,-182));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-70,-450));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-257,-465));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}