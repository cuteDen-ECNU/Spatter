{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((60 55,12 81 ,94 45 ), (60 63,100 39 ,92 95 ))',0), 1, 0, 0, 1,648,351));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((91 17,4 54 ,99 61 ,15 66 ,17 15 ,91 17)))',0), 1, 0, 0, 1,-515,-922));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(18 67,74 48 ,92 58 ,18 67)',0), 1, 0, 0, 1,572,-343));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((90 75,92 34 ,14 59 ,13 98 ,38 18 ,71 94 ,9 100 ,90 75))',0), 1, 0, 0, 1,675,-752));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PointFromText('POINT(43 94)',0), 1, 0, 0, 1,339,-367));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(2 55)',0), 1, 0, 0, 1,773,952));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-224,-564));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-331,-522));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(39 0)',0), 1, 0, 0, 1,853,-716));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTILINESTRING((50 89,80 77 ,43 6 ), (28 34,78 70 ,67 20 ))',0), 1, 0, 0, 1,455,156));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}