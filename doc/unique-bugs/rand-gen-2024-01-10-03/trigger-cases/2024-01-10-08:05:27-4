{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT((3 54),(10 84),(53 19),(19 66),(57 70))',0), 1, 0, 0, 1,359,-648));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(34 98)',0), 1, 0, 0, 1,-191,-134));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PointFromText('POINT(92 74)',0), 1, 0, 0, 1,703,-943));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,917,-279));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PointFromText('POINT(77 29)',0), 1, 0, 0, 1,-516,758));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((35 55,54 10 ,24 19 ,17 13 ,50 61 ,35 55)),((66 18,15 35 ,75 46 ,10 100 ,53 8 ,66 18)))',0), 1, 0, 0, 1,-972,-145));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT((88 53),(22 2),(92 63),(93 13),(41 25),(36 90),(47 40))',0), 1, 0, 0, 1,-624,702));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_PolygonFromText('POLYGON((0 99,7 67 ,27 48 ,2 9 ,60 53 ,15 22 ,0 99))',0), 1, 0, 0, 1,234,138));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-744,423));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPointFromText('MULTIPOINT((73 70),(82 40),(62 10))',0), 1, 0, 0, 1,712,-164));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}