{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((19 81,70 84 ,19 81))',0), 1, 0, 0, 1,-908,-176));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((6 80,87 100 ,27 52 ,26 30 ,7 64 ,62 73 ,9 83 ,62 65 ,6 80))',0), 1, 0, 0, 1,-268,-962));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(70 54))',0), 1, 0, 0, 1,-167,641));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,221,368));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-302,-301));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOINT((64 97))',0), 1, 0, 0, 1,-364,-58));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((31 98),(23 42),(86 6),(55 60),(61 53),(69 64),(32 74),(95 44),(43 52),(63 80))', 0)), 1, 0, 0, 1,-131,765));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING((1 50,34 9 ))',0), 1, 0, 0, 1,-930,827));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT((68 26),(65 13),(70 27),(64 16),(74 42),(1 86),(17 57))',0), 1, 0, 0, 1,-508,-55));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOINT((83 36),(46 96),(30 33),(58 10),(77 7))',0), 1, 0, 0, 1,-26,654));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}