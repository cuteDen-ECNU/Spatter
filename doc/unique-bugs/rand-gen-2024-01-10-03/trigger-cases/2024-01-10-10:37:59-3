{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POINT(40 7)',0), 1, 0, 0, 1,42,868));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((7 82,51 54 ,18 95 ,48 65 ,12 69 ,2 95 ,35 72 ,94 73 ,7 82))',0), 1, 0, 0, 1,468,529));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PointFromText('POINT(58 53)',0), 1, 0, 0, 1,-357,146));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((94 88,33 33 ), (46 17,68 51 ))',0), 1, 0, 0, 1,137,768));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_LineFromText('LINESTRING(64 32,94 75 ,69 33 ,64 32)',0), 1, 0, 0, 1,746,-795));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(15 64)',0), 1, 0, 0, 1,-123,-837));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((89 34,53 93 ,88 50 ,89 34)),((53 86,38 3 ,77 68 ,53 86)),((31 81,38 91 ,83 66 ,31 81)))',0), 1, 0, 0, 1,-634,351));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,754,-573));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-550,19));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((96 3,78 81 ,80 76 ,96 3)),((64 24,2 94 ,87 46 ,64 24)),((98 28,32 30 ,74 23 ,98 28)))',0), 1, 0, 0, 1,-871,-950));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}