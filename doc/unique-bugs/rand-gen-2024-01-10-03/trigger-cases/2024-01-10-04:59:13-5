{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,292,-881));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(60 90)',0), 1, 0, 0, 1,-61,-787));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(81 94,65 49 ,64 19 ,81 94)',0), 1, 0, 0, 1,-266,842));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-358,524));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('LINESTRING(45 82,17 38 ,40 20 ,45 82)',0), 1, 0, 0, 1,-558,-204));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING(6 40,45 86 ,69 14 ,6 40)',0), 1, 0, 0, 1,-933,-68));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((92 39),(44 66),(24 90),(39 81),(98 70))', 0)), 1, 0, 0, 1,-721,-536));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MLineFromText('MULTILINESTRING((41 71,81 85 ,41 71), (95 0,1 95 ))',0), 1, 0, 0, 1,123,-693));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((25 98),(0 99),(35 86),(21 82),(4 67),(44 36),(69 52),(39 44),(53 59),(11 27),(36 91))', 0)), 1, 0, 0, 1,998,-386));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-759,-641));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}