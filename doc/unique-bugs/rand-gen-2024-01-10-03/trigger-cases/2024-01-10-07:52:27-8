{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((97 60,91 2 ,58 4 ,71 90 ,97 60)),((29 58,82 8 ,57 88 ,61 95 ,29 58)))',0), 1, 0, 0, 1,-587,-660));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-296,-309));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((78 52))',0), 1, 0, 0, 1,828,478));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-481,802));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPointFromText('MULTIPOINT((8 14),(48 90),(47 1),(37 59),(33 54),(61 99))',0), 1, 0, 0, 1,861,-148));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-952,-271));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING((33 94,88 11 ,33 94)))',0), 1, 0, 0, 1,-410,-640));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING(3 80,24 87 ,56 79 )',0), 1, 0, 0, 1,-275,-485));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-955,746));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOINT((15 72),(95 69),(96 99),(61 54),(73 26),(94 44),(27 50),(14 93),(82 89))',0), 1, 0, 0, 1,658,534));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}