{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT((82 34))',0), 1, 0, 0, 1,-273,175));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((37 18,16 1 ,35 24 ,37 18)),((75 72,9 34 ,23 46 ,75 72)),((87 60,88 6 ,10 67 ,87 60)))',0), 1, 0, 0, 1,-493,-50));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PointFromText('POINT(49 0)',0), 1, 0, 0, 1,-273,265));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-212,-715));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(16 83)',0), 1, 0, 0, 1,345,71));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING(35 53,69 35 ,98 63 ,35 53)',0), 1, 0, 0, 1,211,869));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTIPOINT((43 66))',0), 1, 0, 0, 1,84,-626));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-122,551));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PolygonFromText('POLYGON((28 94,64 69 ,54 42 ,80 6 ,28 94))',0), 1, 0, 0, 1,-153,-41));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((82 37,47 96 ,94 28 ,38 78 ,82 37)),((50 48,9 85 ,30 99 ,62 58 ,50 48)),((82 95,58 50 ,19 14 ,73 6 ,82 95)),((39 94,35 80 ,41 95 ,48 84 ,39 94)))',0), 1, 0, 0, 1,-357,386));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}