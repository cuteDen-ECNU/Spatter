{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((98 93,19 80 ,82 52 ,98 93), (94 21,65 57 ,70 1 ))',0), 1, 0, 0, 1,-28,-211));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING((10 16,77 19 ,10 16))',0), 1, 0, 0, 1,-29,141));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTILINESTRING EMPTY)',0), 1, 0, 0, 1,74,-533));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-205,933));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPointFromText('MULTIPOINT((21 74),(69 25),(46 65),(82 1),(93 78),(78 33),(19 5),(59 88),(35 80))',0), 1, 0, 0, 1,-713,-63));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING((22 87,43 92 ,26 35 ,22 87))',0), 1, 0, 0, 1,-240,703));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,341,192));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_PointFromText('POINT(37 26)',0), 1, 0, 0, 1,-106,97));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PolygonFromText('POLYGON((14 3,55 18 ,6 48 ,76 63 ,44 96 ,56 24 ,47 61 ,89 79 ,96 41 ,14 3))',0), 1, 0, 0, 1,672,52));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PointFromText('POINT(31 41)',0), 1, 0, 0, 1,-371,-931));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}