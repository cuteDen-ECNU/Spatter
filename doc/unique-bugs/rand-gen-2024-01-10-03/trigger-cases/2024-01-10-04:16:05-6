{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 512)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(8,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 512)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(7,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(POINT(99 35),GEOMETRYCOLLECTION EMPTY))',0), 1, 0, 0, 1,-513,844));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(75 32,0 71 ,70 65 ,75 32)',0), 1, 0, 0, 1,-440,246));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(59 86,52 99 ,81 68 ,59 86)',0), 1, 0, 0, 1,-745,-352));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POLYGON((99 12,34 5 ,1 18 ,99 12))',0), 1, 0, 0, 1,-692,-655));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PointFromText('POINT(18 10)',0), 1, 0, 0, 1,-536,-510));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPointFromText('MULTIPOINT((52 74),(68 26),(32 70),(56 10),(41 92),(11 62),(81 10),(65 57),(48 14))',0), 1, 0, 0, 1,-592,678));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,627,-620));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,903,395));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((94 20,13 95 ,32 79 ))',0), 1, 0, 0, 1,-15,-681));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('LINESTRING(76 4,40 67 ,81 15 ,76 4)',0), 1, 0, 0, 1,867,436));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}