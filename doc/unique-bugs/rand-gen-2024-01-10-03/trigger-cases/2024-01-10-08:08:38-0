{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((16 49,66 2 ,6 55 ,16 49)),((59 46,90 74 ,18 47 ,59 46)),((92 8,70 17 ,92 35 ,92 8)))',0), 1, 0, 0, 1,171,-830));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,730,-196));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,83,732));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT((58 33),(32 14),(0 79),(44 99))',0), 1, 0, 0, 1,-305,-369));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-144,-367));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING((21 84,22 75 ,17 99 ))',0), 1, 0, 0, 1,549,-550));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((47 89,69 22 ,99 45 ,45 92 ,47 89)),((21 9,62 30 ,43 17 ,65 45 ,21 9)))',0), 1, 0, 0, 1,127,759));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING(36 88,65 70 ,22 9 ,36 88)',0), 1, 0, 0, 1,-304,294));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-183,-163));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MLineFromText('MULTILINESTRING((7 56,32 93 ,40 31 ,7 56))',0), 1, 0, 0, 1,-324,-266));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}