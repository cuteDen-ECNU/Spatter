{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 629)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(14,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 629)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(11,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('LINESTRING(64 72,82 73 ,9 73 )',0), 1, 0, 0, 1,223,-898));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,786,-273));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING((59 50,25 59 ,23 25 ), (1 57,29 73 ,68 1 ,1 57))',0), 1, 0, 0, 1,400,874));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-369,-686));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((10 32,69 12 ,55 37 ,95 50 ,10 32)),((89 93,59 51 ,18 55 ,35 65 ,89 93)))',0), 1, 0, 0, 1,-223,-69));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POINT(11 48)',0), 1, 0, 0, 1,-246,-350));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTILINESTRING((90 3,83 97 ,2 17 ))',0), 1, 0, 0, 1,-876,-133));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_PointFromText('POINT(6 59)',0), 1, 0, 0, 1,156,203));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POLYGON((47 89,73 51 ,71 52 ,26 2 ,3 63 ,13 11 ,47 89))',0), 1, 0, 0, 1,-447,-612));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT EMPTY,LINESTRING(17 0,18 81 ,44 23 ))',0), 1, 0, 0, 1,-160,569));  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}