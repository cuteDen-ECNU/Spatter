{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,915,-834));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(86 19)',0), 1, 0, 0, 1,-624,-96));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(1 30,4 19 ,53 26 )',0), 1, 0, 0, 1,935,279));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PointFromText('POINT(17 93)',0), 1, 0, 0, 1,-396,833));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((65 43,20 52 ,83 55 ,78 72 ,65 43)),((85 75,44 27 ,95 88 ,11 51 ,85 75)),((11 68,87 42 ,17 32 ,71 20 ,11 68)),((50 39,77 78 ,3 80 ,1 29 ,50 39)))',0), 1, 0, 0, 1,-550,513));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-876,922));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_LineFromText('LINESTRING(78 83,100 32 ,3 36 ,78 83)',0), 1, 0, 0, 1,-777,-173));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(POINT(84 42),LINESTRING(67 82,30 81 ,97 70 ,6 77 ,82 13 )))',0), 1, 0, 0, 1,-914,-385));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT EMPTY,MULTILINESTRING((30 70,33 32 ,30 70)))',0), 1, 0, 0, 1,517,506));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-722,-100));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}