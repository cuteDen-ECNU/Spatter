{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,155,-838));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOLYGON(((28 64,31 26 ,74 33 ,28 64)),((19 80,97 84 ,10 46 ,19 80))),POINT(43 96))',0), 1, 0, 0, 1,-998,349));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING((93 86,97 11 ,93 86))',0), 1, 0, 0, 1,768,809));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((56 26,59 4 ,9 92 ,93 51 ,56 26)),((66 89,80 67 ,14 71 ,49 98 ,66 89)))',0), 1, 0, 0, 1,-942,840));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,24,843));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POLYGON((1 91,56 45 ,0 20 ,87 9 ,1 91))',0), 1, 0, 0, 1,461,-198));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MLineFromText('MULTILINESTRING((81 80,91 5 ,22 21 ,81 80))',0), 1, 0, 0, 1,-936,-628));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POLYGON((50 44,0 61 ,79 96 ,97 19 ,55 63 ,46 47 ,99 15 ,61 17 ,50 44))',0), 1, 0, 0, 1,-55,105));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(3 92)',0), 1, 0, 0, 1,-692,-547));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POINT(89 57)',0), 1, 0, 0, 1,415,-752));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}