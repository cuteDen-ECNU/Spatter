{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(12,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((22 27,74 96 ,4 57 ,22 27)),((17 19,4 87 ,76 12 ,17 19)))',0), 1, 0, 0, 1,-742,-147));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(10 80)',0), 1, 0, 0, 1,850,-967));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON EMPTY,POINT(87 13))',0), 1, 0, 0, 1,308,-946));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-647,72));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,586,274));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,159,-627));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT((48 27),(16 53))',0), 1, 0, 0, 1,360,-84));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOINT((71 3),(83 17),(32 73),(78 27),(100 66),(11 92),(28 88),(32 20))',0), 1, 0, 0, 1,-869,-712));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,182,235));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((37 98,88 93 ,5 88 ,20 5 ,15 26 ,37 98)),((67 61,95 4 ,84 65 ,54 98 ,43 69 ,67 61)),((43 55,16 32 ,23 97 ,24 77 ,67 44 ,43 55)))',0), 1, 0, 0, 1,518,-449));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}