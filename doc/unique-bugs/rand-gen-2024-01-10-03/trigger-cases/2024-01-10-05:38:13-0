{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((92 29),(1 37),(64 85),(17 28),(25 43),(53 80))',0), 1, 0, 0, 1,-644,-357));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,646,-57));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(96 57,5 57 ,46 24 ,96 57)',0), 1, 0, 0, 1,-619,-879));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((4 84,62 2 ))',0), 1, 0, 0, 1,644,242));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPointFromText('MULTIPOINT((6 21),(96 42),(83 4),(23 91),(63 70),(96 3),(64 23),(23 35))',0), 1, 0, 0, 1,-488,992));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,354,-984));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((86 96),(60 1),(39 24),(50 29),(74 24))', 0)), 1, 0, 0, 1,416,-764));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOINT((4 96),(15 15),(20 36),(6 46),(80 41),(25 43),(27 5),(95 88),(20 70),(38 8))',0), 1, 0, 0, 1,172,24));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((88 61,35 4 ))',0), 1, 0, 0, 1,-264,847));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PointFromText('POINT(94 47)',0), 1, 0, 0, 1,203,-290));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}