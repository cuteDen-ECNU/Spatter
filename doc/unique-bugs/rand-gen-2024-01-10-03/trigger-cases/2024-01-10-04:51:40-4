{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(59 53)',0), 1, 0, 0, 1,342,-790));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POLYGON((88 92,41 36 ,25 91 ,93 33 ,79 30 ,88 92))',0), 1, 0, 0, 1,-971,-366));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-475,184));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING(48 61,56 48 ,53 90 ,48 61)',0), 1, 0, 0, 1,-159,-108));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_LineFromText('LINESTRING(5 96,52 100 ,45 53 ,5 96)',0), 1, 0, 0, 1,-822,415));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,591,-34));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POINT(75 83)',0), 1, 0, 0, 1,-436,201));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((66 84,90 57 ,8 8 ,21 97 ,90 29 ,66 84)),((25 48,99 64 ,9 23 ,99 15 ,89 62 ,25 48)))',0), 1, 0, 0, 1,262,305));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTILINESTRING((18 25,11 6 ,2 23 ))',0), 1, 0, 0, 1,392,-302));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((39 99),(60 90),(8 67),(15 12))', 0)), 1, 0, 0, 1,-436,168));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}