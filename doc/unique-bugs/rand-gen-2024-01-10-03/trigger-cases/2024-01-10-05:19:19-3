{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((92 5,64 21 ,78 63 ,69 48 ,92 5)),((16 36,97 54 ,51 35 ,95 75 ,16 36)),((89 68,43 41 ,49 79 ,28 70 ,89 68)))',0), 1, 0, 0, 1,685,449));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,200,-971));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING EMPTY,LINESTRING(7 57,86 27 ,6 2 ))',0), 1, 0, 0, 1,-967,-346));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(54 25))',0), 1, 0, 0, 1,-322,938));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,432,98));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(87 66)',0), 1, 0, 0, 1,249,1));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PolygonFromText('POLYGON((43 100,59 22 ,75 55 ,55 87 ,43 100))',0), 1, 0, 0, 1,-130,-699));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,589,-714));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(0 69)',0), 1, 0, 0, 1,-888,564));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,830,-938));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,3, 4, 4, -3, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 5, 5);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}