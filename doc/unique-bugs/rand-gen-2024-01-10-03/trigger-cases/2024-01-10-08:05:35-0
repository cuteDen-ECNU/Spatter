{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,209,-713));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING((2 56,4 100 ,47 56 ,2 56), (73 92,35 48 ,94 84 ))',0), 1, 0, 0, 1,613,894));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,398,928));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING((25 38,50 83 ,25 38)))',0), 1, 0, 0, 1,955,-466));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,907,986));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING(97 64,59 37 ,68 78 ,97 64)',0), 1, 0, 0, 1,-207,-724));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT((70 77),(64 8),(89 56),(19 94))',0), 1, 0, 0, 1,-439,-288));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POLYGON((54 14,100 30 ,76 32 ,54 14))',0), 1, 0, 0, 1,-755,482));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((69 58),(95 79),(81 31),(44 84),(23 49),(42 60),(83 52),(16 34),(17 43),(33 74))', 0)), 1, 0, 0, 1,-674,-179));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('LINESTRING(64 73,90 64 ,69 9 )',0), 1, 0, 0, 1,8,313));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}