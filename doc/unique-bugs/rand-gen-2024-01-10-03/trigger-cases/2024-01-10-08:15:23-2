{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT((80 74),(29 73)))',0), 1, 0, 0, 1,-571,-169));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING(70 10,40 82 ,99 85 )',0), 1, 0, 0, 1,-54,438));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((9 30),(31 16),(55 66),(27 28))',0), 1, 0, 0, 1,406,171));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPointFromText('MULTIPOINT((59 16))',0), 1, 0, 0, 1,142,104));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,677,596));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((42 95,93 87 ,12 87 ,63 35 ,62 96 ,42 95)),((11 7,97 42 ,23 26 ,13 34 ,67 7 ,11 7)),((41 36,59 22 ,88 51 ,91 17 ,100 22 ,41 36)))',0), 1, 0, 0, 1,-986,341));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PolygonFromText('POLYGON((36 2,27 24 ,35 69 ,41 11 ,3 15 ,43 53 ,7 83 ,100 55 ,36 2))',0), 1, 0, 0, 1,706,-801));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((21 100))', 0)), 1, 0, 0, 1,473,582));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOINT((51 65),(12 7),(54 35),(46 87))',0), 1, 0, 0, 1,-956,374));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,204,848));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}