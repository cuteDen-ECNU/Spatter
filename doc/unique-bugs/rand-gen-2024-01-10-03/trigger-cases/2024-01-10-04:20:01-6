{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,866,598));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((10 23,6 3 ,29 54 ,57 1 ,20 44 ,10 23))',0), 1, 0, 0, 1,-114,-334));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((42 79))',0), 1, 0, 0, 1,-395,830));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING(63 32,74 63 ,5 93 ,63 32)',0), 1, 0, 0, 1,-871,-283));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_LineFromText('LINESTRING(47 70,95 44 ,46 33 )',0), 1, 0, 0, 1,-617,400));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,913,630));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((64 20,1 53 ,3 0 ,11 33 ,64 20)),GEOMETRYCOLLECTION(MULTILINESTRING((52 47,86 3 ,52 47))))',0), 1, 0, 0, 1,693,708));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,263,94));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(76 67)',0), 1, 0, 0, 1,19,-774));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((20 96,43 44 ,5 91 ,17 62 ,20 96)),((45 24,14 69 ,72 66 ,83 94 ,45 24)),((24 51,36 3 ,53 21 ,96 97 ,24 51)))',0), 1, 0, 0, 1,-16,-765));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}