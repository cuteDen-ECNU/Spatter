{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(20,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,186,-938));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION EMPTY)',0), 1, 0, 0, 1,650,-213));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(52 70,64 52 ,84 75 )',0), 1, 0, 0, 1,-944,924));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-635,411));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTILINESTRING((38 73,12 79 ,0 37 ))',0), 1, 0, 0, 1,-705,263));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING((34 50,5 93 ,34 50), (14 33,77 35 ))',0), 1, 0, 0, 1,657,325));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MLineFromText('MULTILINESTRING((41 39,78 94 ))',0), 1, 0, 0, 1,455,-549));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,417,351));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('LINESTRING(59 31,2 13 ,14 59 ,59 31)',0), 1, 0, 0, 1,220,655));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING EMPTY,GEOMETRYCOLLECTION EMPTY)',0), 1, 0, 0, 1,-697,-297));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,3, 4, 4, -3, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 5, 5);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}