{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 487)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 487)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(8,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(41 9)',0), 1, 0, 0, 1,-462,-853));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(12 31)',0), 1, 0, 0, 1,816,-415));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((38 76),(72 64),(77 54),(32 58),(14 70),(27 78),(34 53),(38 28),(73 16),(5 38))',0), 1, 0, 0, 1,511,772));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING((86 55,3 14 ), (97 41,12 4 ))',0), 1, 0, 0, 1,67,756));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOINT((69 8),(64 35),(87 49))',0), 1, 0, 0, 1,-977,112));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-199,722));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PointFromText('POINT(2 25)',0), 1, 0, 0, 1,795,815));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING EMPTY,LINESTRING(22 26,65 94 ,31 38 ,26 91 ,35 24 ,22 26))',0), 1, 0, 0, 1,464,895));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOINT((92 23),(63 9),(2 54))',0), 1, 0, 0, 1,-425,-522));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,10,977));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}