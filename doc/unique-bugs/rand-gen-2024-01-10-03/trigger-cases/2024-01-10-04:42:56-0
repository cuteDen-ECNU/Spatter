{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT((4 6),(79 55),(36 56),(4 89),(88 6),(95 34),(64 73))',0), 1, 0, 0, 1,-942,-694));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING(90 76,78 42 ,46 19 ,90 76)',0), 1, 0, 0, 1,980,-797));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,598,-228));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,858,-524));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POLYGON((15 18,18 76 ,32 6 ,72 34 ,47 6 ,15 18))',0), 1, 0, 0, 1,-840,-896));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POINT(8 65)',0), 1, 0, 0, 1,313,540));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-75,-599));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING(78 32,100 79 ,78 16 )',0), 1, 0, 0, 1,350,-997));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(22 86)',0), 1, 0, 0, 1,530,-962));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((20 88,88 50 ,60 91 ,63 34 ,20 88)),((58 34,1 24 ,87 34 ,24 4 ,58 34)),((30 82,39 21 ,47 56 ,52 61 ,30 82)),((21 72,83 70 ,77 68 ,80 47 ,21 72)))',0), 1, 0, 0, 1,561,-530));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}