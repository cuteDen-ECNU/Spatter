{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(84 70))',0), 1, 0, 0, 1,437,371));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(1 9)',0), 1, 0, 0, 1,254,87));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-163,815));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPointFromText('MULTIPOINT((86 86),(24 63),(51 32))',0), 1, 0, 0, 1,-517,-243));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((26 72,98 45 ,5 18 ,19 36 ,10 50 ,26 72)),((36 31,50 2 ,17 68 ,17 10 ,14 78 ,36 31)),((25 37,86 19 ,45 77 ,93 46 ,10 82 ,25 37)),((37 69,88 98 ,11 60 ,78 50 ,6 95 ,37 69)))',0), 1, 0, 0, 1,390,61));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING(87 81,74 8 ,67 26 )',0), 1, 0, 0, 1,-808,-208));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT((58 29),(45 31),(67 66),(76 85),(99 75),(87 50))',0), 1, 0, 0, 1,841,373));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,551,960));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(94 18)',0), 1, 0, 0, 1,-579,-328));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTILINESTRING((11 12,9 2 ))',0), 1, 0, 0, 1,-507,894));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}