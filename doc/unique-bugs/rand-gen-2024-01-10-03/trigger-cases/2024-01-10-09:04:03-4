{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 680)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(13,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 680)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(16,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POLYGON((85 56,30 24 ,57 38 ,96 65 ,26 7 ,69 6 ,85 56))',0), 1, 0, 0, 1,969,-650));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING((17 18,37 40 ,70 5 ,17 18))',0), 1, 0, 0, 1,82,568));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(74 47,10 40 ,58 69 )',0), 1, 0, 0, 1,58,670));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PointFromText('POINT(37 56)',0), 1, 0, 0, 1,-407,871));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('LINESTRING(96 94,92 31 ,2 81 )',0), 1, 0, 0, 1,176,-184));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-966,527));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POINT(77 89)',0), 1, 0, 0, 1,-576,-230));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING((34 60,20 3 ,17 64 ), (65 84,77 51 ,61 76 ))',0), 1, 0, 0, 1,507,-353));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING(45 66,69 85 ,30 98 ,70 6 ,24 70 ,45 66),GEOMETRYCOLLECTION EMPTY)',0), 1, 0, 0, 1,-352,437));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POINT(61 30)',0), 1, 0, 0, 1,-629,-687));  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}