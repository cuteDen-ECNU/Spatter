{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((64 69,31 64 ,26 18 ,64 69), (65 33,84 64 ,82 50 ,65 33))',0), 1, 0, 0, 1,-784,908));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(14 30)',0), 1, 0, 0, 1,-530,197));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(3 17,39 61 ,5 100 ,3 17)',0), 1, 0, 0, 1,361,742));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT((57 79),(78 82),(48 23),(54 87),(63 72),(60 38),(6 81),(41 96),(67 99),(28 51),(91 90))',0), 1, 0, 0, 1,835,-164));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOLYGON EMPTY,LINESTRING(23 90,28 54 ,83 4 ,64 19 ,35 72 ))',0), 1, 0, 0, 1,-863,-332));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PolygonFromText('POLYGON((71 90,61 94 ,44 0 ,45 62 ,71 90))',0), 1, 0, 0, 1,64,158));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,128,379));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,456,675));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('LINESTRING(66 18,7 69 ,46 42 )',0), 1, 0, 0, 1,459,-551));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MLineFromText('MULTILINESTRING((44 34,100 52 ,44 34))',0), 1, 0, 0, 1,843,-940));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}