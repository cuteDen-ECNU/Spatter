{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(85 95)',0), 1, 0, 0, 1,-288,76));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-598,-892));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PointFromText('POINT(19 31)',0), 1, 0, 0, 1,476,-449));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTILINESTRING((34 5,18 0 ,34 5)),POLYGON((3 1,3 39 ,28 66 ,3 1)))',0), 1, 0, 0, 1,188,-21));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(71 34))',0), 1, 0, 0, 1,-556,-563));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((54 23,25 37 ,52 85 ,7 28 ,54 23)),((30 70,77 7 ,17 79 ,97 82 ,30 70)),((86 44,62 44 ,88 42 ,51 45 ,86 44)),((27 93,67 14 ,15 57 ,56 3 ,27 93)))',0), 1, 0, 0, 1,-488,960));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-8,145));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING(33 71,18 93 ,0 27 )',0), 1, 0, 0, 1,-652,510));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((15 71,35 86 ), (8 15,68 82 ,8 15))',0), 1, 0, 0, 1,-25,-396));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POINT(62 71)',0), 1, 0, 0, 1,439,919));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}