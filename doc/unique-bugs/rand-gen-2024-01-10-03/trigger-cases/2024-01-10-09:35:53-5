{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,258,-604));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(56 45)',0), 1, 0, 0, 1,-221,-846));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(11 66,69 60 ,21 11 ,11 66)',0), 1, 0, 0, 1,718,-953));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PointFromText('POINT(59 45)',0), 1, 0, 0, 1,63,-617));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,149,-502));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MLineFromText('MULTILINESTRING((60 44,49 47 ,54 66 ), (84 27,0 45 ,80 8 ))',0), 1, 0, 0, 1,816,-152));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,110,-681));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MLineFromText('MULTILINESTRING((24 96,62 48 ,24 96), (49 32,87 58 ))',0), 1, 0, 0, 1,-723,672));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT((45 43),(76 23),(95 56),(3 21))',0), 1, 0, 0, 1,10,-145));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-670,163));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}