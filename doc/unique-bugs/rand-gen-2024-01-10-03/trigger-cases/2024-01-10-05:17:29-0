{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(12,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,681,526));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POLYGON((80 47,58 40 ,77 59 ,54 96 ,40 40 ,60 33 ,59 29 ,80 47))',0), 1, 0, 0, 1,866,812));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-430,-631));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-403,796));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,763,-624));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING((43 6,93 76 ), (27 62,78 16 ))',0), 1, 0, 0, 1,350,-919));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING(52 72,86 8 ,14 92 ,79 71 ,94 23 ))',0), 1, 0, 0, 1,-235,-787));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_PointFromText('POINT(24 97)',0), 1, 0, 0, 1,-957,-402));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(9 50)',0), 1, 0, 0, 1,59,-760));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOINT((55 12),(81 2),(20 78),(14 88),(29 43),(74 77),(82 47),(59 9),(10 48),(59 71),(7 33))',0), 1, 0, 0, 1,192,761));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Multi(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}