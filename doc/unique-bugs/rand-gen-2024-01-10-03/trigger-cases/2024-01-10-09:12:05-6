{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((61 51),(41 92),(26 57),(74 49),(56 51),(67 93),(39 78),(1 11),(58 86),(5 17),(46 0))',0), 1, 0, 0, 1,645,396));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING(53 40,93 5 ,59 100 )',0), 1, 0, 0, 1,347,275));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING((15 12,25 45 ), (88 26,55 24 ,88 26))',0), 1, 0, 0, 1,-943,669));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((77 80,7 40 ,24 45 ,19 14 ,99 38 ,92 99 ,77 80))',0), 1, 0, 0, 1,-143,822));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTILINESTRING EMPTY)',0), 1, 0, 0, 1,310,-743));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MLineFromText('MULTILINESTRING((73 73,9 62 ,73 73))',0), 1, 0, 0, 1,-204,-753));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTILINESTRING((53 1,38 89 ))',0), 1, 0, 0, 1,453,764));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOINT((53 81),(74 49))',0), 1, 0, 0, 1,390,924));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-549,36));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PolygonFromText('POLYGON((11 100,51 79 ,2 77 ,54 98 ,18 18 ,11 100))',0), 1, 0, 0, 1,667,23));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}