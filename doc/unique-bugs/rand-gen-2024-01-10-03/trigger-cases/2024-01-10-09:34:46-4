{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(12,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT((51 14)),LINESTRING(87 94,4 73 ,28 60 ,87 94))',0), 1, 0, 0, 1,-322,-11));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,16,793));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(53 78))',0), 1, 0, 0, 1,640,-226));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING((54 20,36 68 ,85 39 ))',0), 1, 0, 0, 1,-98,-856));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,665,-85));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,238,-452));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POLYGON((30 36,49 59 ,23 42 ,85 92 ,26 80 ,89 19 ,30 36))',0), 1, 0, 0, 1,-302,634));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPointFromText('MULTIPOINT((46 39),(20 82))',0), 1, 0, 0, 1,-778,-941));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POLYGON((10 35,90 60 ,53 55 ,19 78 ,44 69 ,67 90 ,30 82 ,36 20 ,63 15 ,10 35))',0), 1, 0, 0, 1,972,759));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,540,-803));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}