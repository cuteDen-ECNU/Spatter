{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-483,727));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING((92 1,88 5 ,14 6 ,92 1), (96 51,77 26 ,64 82 ))',0), 1, 0, 0, 1,755,-779));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PointFromText('POINT(11 65)',0), 1, 0, 0, 1,441,-588));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING(94 61,19 96 ,98 58 ,94 61)',0), 1, 0, 0, 1,766,-389));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('LINESTRING(19 51,94 25 ,87 62 ,19 51)',0), 1, 0, 0, 1,-449,821));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOINT((78 91),(70 59),(54 47),(85 69))',0), 1, 0, 0, 1,-248,-703));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-926,255));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING(35 14,12 23 ,1 4 ,35 14)',0), 1, 0, 0, 1,566,-432));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((78 90,40 66 ,34 15 ,12 12 ,78 90)))',0), 1, 0, 0, 1,552,128));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MLineFromText('MULTILINESTRING((89 56,16 74 ,79 36 ), (98 17,32 15 ,30 33 ))',0), 1, 0, 0, 1,-681,-351));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}