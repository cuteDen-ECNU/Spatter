{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(12,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((55 87,95 96 ,13 17 ), (83 4,94 65 ,8 93 ))',0), 1, 0, 0, 1,455,-52));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,14,794));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POLYGON((5 48,12 21 ,39 45 ,53 80 ,5 48))',0), 1, 0, 0, 1,22,682));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-762,-739));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((39 43,96 39 ,94 39 ,50 44 ,37 83 ,39 43)),((78 63,14 51 ,80 38 ,24 84 ,78 8 ,78 63)),((73 53,35 1 ,88 69 ,7 35 ,56 61 ,73 53)))',0), 1, 0, 0, 1,777,-81));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MLineFromText('MULTILINESTRING((84 20,22 15 ,21 32 ,84 20))',0), 1, 0, 0, 1,809,-172));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING EMPTY,MULTIPOLYGON EMPTY)',0), 1, 0, 0, 1,-166,144));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POINT(98 14)',0), 1, 0, 0, 1,581,-82));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(4 55)',0), 1, 0, 0, 1,-766,243));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-691,192));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}