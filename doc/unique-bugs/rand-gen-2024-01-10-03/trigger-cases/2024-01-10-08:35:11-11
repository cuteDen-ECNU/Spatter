{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,-67,484));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-886,213));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(97 80)',0), 1, 0, 0, 1,371,555));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOLYGON EMPTY,MULTILINESTRING((30 85,75 60 ,30 85)))',0), 1, 0, 0, 1,-280,-59));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-358,-929));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(26 33)',0), 1, 0, 0, 1,-490,-872));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((18 89),(57 60),(93 36),(19 39),(10 40),(36 27))', 0)), 1, 0, 0, 1,-305,818));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,733,-176));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(34 20)',0), 1, 0, 0, 1,-671,646));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((58 94,57 48 ,38 49 ,58 94)))',0), 1, 0, 0, 1,172,-105));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}