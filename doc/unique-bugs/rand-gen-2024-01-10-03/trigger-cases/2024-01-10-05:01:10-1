{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((79 32,23 74 ,52 39 ))',0), 1, 0, 0, 1,772,-205));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(16 78,87 88 ,20 65 ,16 78)',0), 1, 0, 0, 1,521,994));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,554,-45));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-116,-25));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOINT((69 31),(84 80),(41 32),(75 44),(64 5),(93 28),(72 92),(19 76),(27 11))',0), 1, 0, 0, 1,-434,2));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPointFromText('MULTIPOINT((8 13),(49 38),(61 30),(75 65))',0), 1, 0, 0, 1,618,820));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT((2 19),(15 70))',0), 1, 0, 0, 1,356,868));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPointFromText('MULTIPOINT((15 100),(97 40))',0), 1, 0, 0, 1,-932,-829));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOINT((33 80),(86 91),(100 40),(2 51),(5 12),(24 82),(35 28),(33 10))',0), 1, 0, 0, 1,1,845));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT((21 28),(90 8),(43 32)))',0), 1, 0, 0, 1,267,773));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}