{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING(13 17,96 31 ,80 26 )',0), 1, 0, 0, 1,-961,-84));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POLYGON((88 43,40 57 ,89 5 ,13 64 ,88 43))',0), 1, 0, 0, 1,-102,490));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(17 77))',0), 1, 0, 0, 1,-838,-760));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,980,159));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PolygonFromText('POLYGON((63 74,17 35 ,55 51 ,45 100 ,87 73 ,32 58 ,45 44 ,8 0 ,57 20 ,13 39 ,63 74))',0), 1, 0, 0, 1,-637,89));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MLineFromText('MULTILINESTRING((12 56,90 86 ,16 32 ,12 56), (92 95,20 60 ,16 70 ))',0), 1, 0, 0, 1,853,-24));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('LINESTRING(98 65,99 14 ,84 68 )',0), 1, 0, 0, 1,348,-717));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_PointFromText('POINT(72 67)',0), 1, 0, 0, 1,-676,-974));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-89,661));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MLineFromText('MULTILINESTRING((31 34,60 35 ,69 77 ,31 34), (0 41,38 7 ,94 48 ,0 41))',0), 1, 0, 0, 1,934,945));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}