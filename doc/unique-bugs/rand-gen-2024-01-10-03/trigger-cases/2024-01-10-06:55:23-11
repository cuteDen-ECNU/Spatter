{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-903,469));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-670,542));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-36,-926));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,999,997));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PointFromText('POINT(60 12)',0), 1, 0, 0, 1,123,444));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((87 90),(79 24),(95 30),(36 43),(97 7),(60 3))', 0)), 1, 0, 0, 1,154,-306));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((85 18,84 70 ,83 57 ,60 86 ,79 84 ,85 18)))',0), 1, 0, 0, 1,-237,-764));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POINT(49 28)',0), 1, 0, 0, 1,-179,409));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((97 83,28 51 ,29 88 ,97 83)),((100 2,17 68 ,81 8 ,100 2)),((7 95,44 82 ,54 47 ,7 95)),((88 26,46 90 ,23 61 ,88 26)))',0), 1, 0, 0, 1,-865,159));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PolygonFromText('POLYGON((75 50,85 0 ,61 56 ,90 72 ,35 48 ,52 33 ,75 50))',0), 1, 0, 0, 1,-872,-892));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}