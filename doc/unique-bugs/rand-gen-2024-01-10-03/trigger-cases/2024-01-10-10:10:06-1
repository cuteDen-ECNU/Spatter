{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 939)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(16,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 939)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(13,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((13 24),(95 46))',0), 1, 0, 0, 1,-77,341));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING(35 62,7 1 ,3 63 )',0), 1, 0, 0, 1,387,238));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-573,789));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPointFromText('MULTIPOINT((90 51),(85 57),(90 71),(10 39),(52 33))',0), 1, 0, 0, 1,796,851));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PointFromText('POINT(65 10)',0), 1, 0, 0, 1,-639,-40));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POLYGON((85 24,58 33 ,6 74 ,24 24 ,26 23 ,44 65 ,76 86 ,10 92 ,85 24))',0), 1, 0, 0, 1,526,967));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,608,618));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT EMPTY,POLYGON EMPTY)',0), 1, 0, 0, 1,-418,-956));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((56 51))', 0)), 1, 0, 0, 1,363,-724));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOLYGON EMPTY,GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(MULTILINESTRING((14 100,75 22 ), (50 51,84 52 )))))',0), 1, 0, 0, 1,467,-147));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}