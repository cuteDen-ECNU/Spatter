{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((53 11))',0), 1, 0, 0, 1,147,-202));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTILINESTRING((91 27,53 98 ,91 27)),MULTIPOINT((3 92),(36 6)))',0), 1, 0, 0, 1,-626,-471));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(79 56)',0), 1, 0, 0, 1,-860,908));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POINT(11 60)',0), 1, 0, 0, 1,-789,652));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-400,-817));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POINT(64 100)',0), 1, 0, 0, 1,126,956));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,974,-231));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POLYGON((25 45,69 38 ,67 71 ,55 54 ,70 88 ,100 34 ,25 45))',0), 1, 0, 0, 1,897,-62));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POLYGON((99 15,22 89 ,54 16 ,67 16 ,65 1 ,76 78 ,100 99 ,56 27 ,5 82 ,99 15))',0), 1, 0, 0, 1,923,-145));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PointFromText('POINT(79 60)',0), 1, 0, 0, 1,-249,637));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}