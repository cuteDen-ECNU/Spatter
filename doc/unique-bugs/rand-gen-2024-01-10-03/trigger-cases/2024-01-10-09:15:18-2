{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(12,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((50 78,34 39 ))',0), 1, 0, 0, 1,-381,907));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((56 7,98 24 ,20 51 ,34 82 ,56 7)),((88 95,62 25 ,3 4 ,42 69 ,88 95)),((38 20,23 43 ,63 17 ,63 73 ,38 20)))',0), 1, 0, 0, 1,483,-70));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,943,928));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING(4 73,85 50 ,87 44 )',0), 1, 0, 0, 1,-595,-25));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,413,-716));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-326,727));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((16 34,91 34 ,18 53 ,16 34)),((52 97,64 80 ,81 73 ,52 97)))',0), 1, 0, 0, 1,138,167));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-312,-868));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((30 59,94 69 ), (41 83,68 0 ,41 83))',0), 1, 0, 0, 1,-543,52));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POINT(7 33)',0), 1, 0, 0, 1,112,-339));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}