{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,269,783));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(41 47,90 70 ,90 99 ,41 47)',0), 1, 0, 0, 1,-798,889));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,675,-135));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,513,-143));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING((75 97,19 64 ,75 97))',0), 1, 0, 0, 1,647,648));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POLYGON((51 76,10 32 ,68 56 ,16 84 ,51 76))',0), 1, 0, 0, 1,605,-667));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('LINESTRING(4 28,59 21 ,28 58 )',0), 1, 0, 0, 1,-503,588));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING((36 76,70 4 ,36 76), (49 77,0 89 ,49 77))',0), 1, 0, 0, 1,-430,538));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-124,508));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('LINESTRING(91 83,66 92 ,69 72 ,91 83)',0), 1, 0, 0, 1,851,126));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,0, 2, 2, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 2, 2);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}