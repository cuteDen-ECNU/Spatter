{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-316,772));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(96 51,71 37 ,40 55 )',0), 1, 0, 0, 1,845,-138));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((12 37),(96 43),(4 83),(28 13),(28 11),(7 94))', 0)), 1, 0, 0, 1,545,-44));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING((76 88,86 66 ,76 88), (32 25,55 95 ,32 25))',0), 1, 0, 0, 1,771,350));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-482,723));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MLineFromText('MULTILINESTRING((74 73,92 18 ,74 73))',0), 1, 0, 0, 1,-650,41));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POINT(67 23)',0), 1, 0, 0, 1,-780,218));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((80 89,91 10 ,88 55 ,80 89)),((51 46,17 70 ,39 15 ,51 46)))',0), 1, 0, 0, 1,-115,664));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,212,-547));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING(41 18,87 100 ,93 94 ,41 18)',0), 1, 0, 0, 1,250,-703));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}