{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,667,525));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POLYGON((84 8,23 1 ,38 51 ,66 4 ,94 36 ,0 38 ,52 47 ,36 42 ,36 5 ,84 8))',0), 1, 0, 0, 1,897,-546));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-534,-128));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((8 42,90 49 ,3 19 ,8 42))',0), 1, 0, 0, 1,587,-434));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING((97 16,30 61 ), (23 57,17 8 ,23 57))',0), 1, 0, 0, 1,-704,-608));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-803,820));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_LineFromText('LINESTRING(5 74,79 60 ,30 76 )',0), 1, 0, 0, 1,-872,-581));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING(31 31,68 0 ,9 68 ,31 31)',0), 1, 0, 0, 1,963,-735));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((27 14,74 18 ,72 56 ,27 14)),((68 27,57 71 ,58 93 ,68 27)),((21 62,13 10 ,62 63 ,21 62)))',0), 1, 0, 0, 1,238,909));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MLineFromText('MULTILINESTRING((9 10,87 89 ))',0), 1, 0, 0, 1,217,-721));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}