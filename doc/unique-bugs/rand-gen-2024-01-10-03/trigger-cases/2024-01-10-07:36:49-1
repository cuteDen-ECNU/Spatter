{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(56 50)',0), 1, 0, 0, 1,-70,368));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(79 91)',0), 1, 0, 0, 1,-245,-756));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(83 12,25 82 ,28 2 ,83 12)',0), 1, 0, 0, 1,-716,304));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,158,683));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOINT((43 45),(12 16),(76 37),(70 9),(97 3),(2 5))',0), 1, 0, 0, 1,-648,-277));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-280,745));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('LINESTRING(84 13,79 95 ,35 19 )',0), 1, 0, 0, 1,81,907));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MLineFromText('MULTILINESTRING((89 25,12 57 ,3 30 ), (20 88,52 11 ,88 61 ,20 88))',0), 1, 0, 0, 1,-366,-829));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PolygonFromText('POLYGON((25 42,39 92 ,83 41 ,55 82 ,63 57 ,88 26 ,73 1 ,62 6 ,45 19 ,41 97 ,25 42))',0), 1, 0, 0, 1,-363,725));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING(76 93,78 22 ,77 57 )',0), 1, 0, 0, 1,-907,-51));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}