{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT((91 92),(11 3),(75 21),(22 47),(44 63),(33 16),(77 70),(12 66),(51 100),(78 64),(37 59))',0), 1, 0, 0, 1,-943,-442));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING((18 84,67 71 ,97 47 ), (39 97,79 28 ,46 79 ))',0), 1, 0, 0, 1,50,-411));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING((98 98,1 32 ), (98 64,25 94 ))',0), 1, 0, 0, 1,443,-933));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,675,-404));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(77 39))',0), 1, 0, 0, 1,956,-203));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,654,137));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTILINESTRING((78 1,76 96 ,78 1))',0), 1, 0, 0, 1,-391,551));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING((54 52,81 63 ,54 52)))',0), 1, 0, 0, 1,-399,-137));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(93 26)',0), 1, 0, 0, 1,-377,-532));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PointFromText('POINT(16 86)',0), 1, 0, 0, 1,923,-81));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}