{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 685)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(10,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 685)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(9,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT EMPTY,GEOMETRYCOLLECTION(LINESTRING(83 84,34 80 ,54 77 ,50 49 ,43 28 ,83 84)))',0), 1, 0, 0, 1,607,-117));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING(40 98,4 31 ,63 10 ,40 98)',0), 1, 0, 0, 1,-127,-749));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING((84 72,23 4 ,84 72))',0), 1, 0, 0, 1,-45,-141));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((0 22,24 42 ), (64 56,62 50 ))',0), 1, 0, 0, 1,-403,212));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTILINESTRING((5 67,18 45 ,63 70 ), (6 23,99 50 ,5 71 ))',0), 1, 0, 0, 1,873,829));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(87 24)',0), 1, 0, 0, 1,-865,-489));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('LINESTRING(84 74,14 4 ,15 47 ,84 74)',0), 1, 0, 0, 1,766,-942));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING((50 58,28 92 ,50 58))',0), 1, 0, 0, 1,-67,112));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(68 9,11 29 ,49 99 ,61 90 ,67 21 ))',0), 1, 0, 0, 1,-790,853));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-203,-619));  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}