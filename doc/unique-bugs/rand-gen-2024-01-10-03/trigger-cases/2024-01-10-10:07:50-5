{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((42 76,8 0 ))',0), 1, 0, 0, 1,127,450));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(40 26)',0), 1, 0, 0, 1,-254,-45));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((37 59,73 62 ,84 12 ,67 96 ,37 59)),((62 88,61 92 ,99 49 ,79 37 ,62 88)),((26 50,78 2 ,59 17 ,0 76 ,26 50)))',0), 1, 0, 0, 1,-337,-573));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-923,-780));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POLYGON((20 20,68 15 ,51 69 ,2 12 ,73 4 ,20 20))',0), 1, 0, 0, 1,574,-958));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(30 4)',0), 1, 0, 0, 1,519,-360));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PointFromText('POINT(50 22)',0), 1, 0, 0, 1,-307,-820));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POLYGON((94 71,71 17 ,88 80 ,29 19 ,59 62 ,30 63 ,80 7 ,58 18 ,92 70 ,90 31 ,94 71))',0), 1, 0, 0, 1,-664,-826));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT((8 69),(36 52))',0), 1, 0, 0, 1,-541,403));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,15,-856));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}