{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((66 10,9 5 ))',0), 1, 0, 0, 1,926,-666));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(43 97)',0), 1, 0, 0, 1,888,-675));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((73 92,75 31 ,95 37 ,73 92)),((91 99,59 7 ,11 50 ,91 99)),((42 44,36 0 ,24 60 ,42 44)),((44 88,96 24 ,97 12 ,44 88)))',0), 1, 0, 0, 1,343,-672));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,924,950));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,-907,459));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,250,-787));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,935,-783));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POINT(46 29)',0), 1, 0, 0, 1,546,-568));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((50 13),(33 47),(52 56),(45 84),(66 19),(95 41))', 0)), 1, 0, 0, 1,-875,150));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPointFromText('MULTIPOINT((87 63),(100 87),(79 1),(79 30),(47 22),(0 26),(91 49),(45 29))',0), 1, 0, 0, 1,-983,438));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}