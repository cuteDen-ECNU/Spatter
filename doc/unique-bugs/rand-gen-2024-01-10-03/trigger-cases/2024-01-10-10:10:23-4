{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((18 98,9 82 ,18 98))',0), 1, 0, 0, 1,-431,-92));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING((16 40,93 73 ,16 40))',0), 1, 0, 0, 1,628,-529));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((63 39),(83 84))',0), 1, 0, 0, 1,-145,-764));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-716,609));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(13 53))',0), 1, 0, 0, 1,-140,998));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POINT(14 55)',0), 1, 0, 0, 1,168,-264));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION EMPTY)',0), 1, 0, 0, 1,67,33));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPointFromText('MULTIPOINT((34 73),(95 7),(50 41))',0), 1, 0, 0, 1,-705,346));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_LineFromText('LINESTRING(17 39,14 36 ,7 9 ,17 39)',0), 1, 0, 0, 1,-726,-116));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(POINT(53 90),LINESTRING(26 100,82 29 ,0 36 ,59 11 ,26 100)))',0), 1, 0, 0, 1,58,-509));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Multi(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}