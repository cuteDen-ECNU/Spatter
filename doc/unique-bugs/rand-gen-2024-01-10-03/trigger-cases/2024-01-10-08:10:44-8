{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POLYGON((3 39,55 48 ,23 50 ,4 8 ,58 8 ,2 7 ,91 17 ,57 80 ,96 67 ,3 39))',0), 1, 0, 0, 1,987,764));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-162,-549));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((57 20),(65 90),(12 27))',0), 1, 0, 0, 1,632,464));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PointFromText('POINT(9 33)',0), 1, 0, 0, 1,-998,-34));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING((21 3,75 50 ,81 11 ,21 3), (55 5,76 4 ,89 65 ))',0), 1, 0, 0, 1,-763,467));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PolygonFromText('POLYGON((6 73,94 10 ,88 70 ,79 25 ,6 73))',0), 1, 0, 0, 1,-835,-123));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((73 80,52 29 ,58 44 ,73 80)),((55 38,38 66 ,33 79 ,55 38)),((84 18,21 39 ,16 56 ,84 18)),((74 47,66 97 ,93 25 ,74 47)))',0), 1, 0, 0, 1,204,650));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((58 64),(78 72))', 0)), 1, 0, 0, 1,717,-187));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((4 81,93 50 ,99 25 ,4 81)),((83 71,21 27 ,1 49 ,83 71)),((70 49,50 93 ,52 67 ,70 49)))',0), 1, 0, 0, 1,986,90));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-404,-343));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}