{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((74 91,60 7 ,14 18 ,74 91), (66 7,53 73 ,91 62 ,66 7))',0), 1, 0, 0, 1,20,667));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((88 72,53 74 ,44 41 ,66 50 ,88 72))',0), 1, 0, 0, 1,-43,-503));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,471,-212));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POINT(87 95)',0), 1, 0, 0, 1,-89,671));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,406,-719));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(87 71)',0), 1, 0, 0, 1,-476,-666));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(POINT(2 69),MULTILINESTRING((13 32,40 67 ))))',0), 1, 0, 0, 1,487,806));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT((79 38),(8 69)))',0), 1, 0, 0, 1,-609,-784));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POLYGON((15 67,59 12 ,51 18 ,20 90 ,17 39 ,42 95 ,80 54 ,60 28 ,90 72 ,15 67))',0), 1, 0, 0, 1,394,520));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,-774,623));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}