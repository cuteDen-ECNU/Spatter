{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 618)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(16,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 618)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(18,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(25 51)',0), 1, 0, 0, 1,-800,-476));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING((48 60,15 33 ,48 60))',0), 1, 0, 0, 1,-129,919));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PointFromText('POINT(55 54)',0), 1, 0, 0, 1,99,114));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PointFromText('POINT(44 49)',0), 1, 0, 0, 1,-614,-417));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_LineFromText('LINESTRING(20 19,97 43 ,10 44 )',0), 1, 0, 0, 1,338,982));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((89 6,36 76 ,17 14 ,89 6)),((57 81,2 38 ,76 26 ,57 81)),((34 19,44 22 ,63 37 ,34 19)),((20 68,24 77 ,79 77 ,20 68)))',0), 1, 0, 0, 1,-428,-605));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTIPOINT((76 29),(8 86),(79 4))',0), 1, 0, 0, 1,581,-576));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MLineFromText('MULTILINESTRING((98 81,5 44 ))',0), 1, 0, 0, 1,638,498));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOINT((19 29),(65 88),(98 53),(13 12),(27 63),(50 18),(20 59),(85 71))',0), 1, 0, 0, 1,62,462));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(51 13),MULTIPOLYGON EMPTY)',0), 1, 0, 0, 1,-552,799));  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}