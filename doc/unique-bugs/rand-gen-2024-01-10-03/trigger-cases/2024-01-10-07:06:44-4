{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 957)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(22,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 957)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(32,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-35,727));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT((62 89),(44 76),(96 26),(82 7),(7 28),(66 82),(69 56),(76 43))',0), 1, 0, 0, 1,415,554));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(6 76,57 0 ,83 56 )',0), 1, 0, 0, 1,-380,-119));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPointFromText('MULTIPOINT((74 19),(26 5),(61 88))',0), 1, 0, 0, 1,-823,-149));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING((99 44,12 97 ,99 44))',0), 1, 0, 0, 1,119,-463));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((19 9,42 9 ,91 75 ,78 15 ,66 54 ,19 9)),((46 30,36 42 ,65 7 ,46 32 ,35 68 ,46 30)))',0), 1, 0, 0, 1,947,-939));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((11 98),(7 62))', 0)), 1, 0, 0, 1,744,-964));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON EMPTY,LINESTRING(96 80,0 34 ,26 30 ))',0), 1, 0, 0, 1,-255,-431));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(92 82)',0), 1, 0, 0, 1,-802,-412));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTILINESTRING((50 86,8 36 ,50 86))',0), 1, 0, 0, 1,133,-637));  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}