{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(53 26)',0), 1, 0, 0, 1,328,-550));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-737,937));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((26 30),(59 18),(71 1),(22 54),(96 53),(73 47),(91 2),(41 84),(90 36),(60 27),(45 16))',0), 1, 0, 0, 1,-46,-526));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((25 1,48 19 ))',0), 1, 0, 0, 1,719,-402));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((96 4,88 86 ,91 56 ,5 77 ,49 80 ,96 4)),((3 39,69 99 ,59 26 ,98 73 ,63 38 ,3 39)),((4 67,59 24 ,57 27 ,56 1 ,40 93 ,4 67)))',0), 1, 0, 0, 1,721,-979));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(77 36)',0), 1, 0, 0, 1,-570,-125));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POINT(56 12)',0), 1, 0, 0, 1,668,871));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,-646,446));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING((79 25,48 76 ,79 25)))',0), 1, 0, 0, 1,-603,624));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PointFromText('POINT(94 76)',0), 1, 0, 0, 1,-347,396));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}