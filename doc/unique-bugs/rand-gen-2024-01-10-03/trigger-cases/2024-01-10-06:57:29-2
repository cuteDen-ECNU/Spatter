{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((33 75,44 93 ,80 73 ), (53 22,68 61 ,43 89 ))',0), 1, 0, 0, 1,841,668));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-435,745));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(10 58,54 73 ,98 39 )',0), 1, 0, 0, 1,538,-678));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POLYGON((34 96,10 63 ,32 91 ,99 51 ,79 44 ,41 69 ,1 62 ,74 61 ,29 76 ,34 96))',0), 1, 0, 0, 1,525,490));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(82 5)',0), 1, 0, 0, 1,-2,293));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MLineFromText('MULTILINESTRING((58 58,66 65 ,76 17 ), (74 19,78 45 ,28 84 ,74 19))',0), 1, 0, 0, 1,191,-294));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MLineFromText('MULTILINESTRING((89 7,99 15 ,54 59 ), (12 78,9 60 ,80 70 ))',0), 1, 0, 0, 1,739,-529));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-103,-134));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT((63 45),(28 63),(63 74),(36 42),(7 17),(33 51))',0), 1, 0, 0, 1,240,586));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('LINESTRING(22 22,13 14 ,96 42 )',0), 1, 0, 0, 1,434,-564));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}