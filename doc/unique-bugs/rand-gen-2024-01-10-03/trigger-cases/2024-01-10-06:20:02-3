{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 747)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(14,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 747)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(13,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((57 24,65 55 ,57 24), (66 1,56 3 ))',0), 1, 0, 0, 1,971,-638));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING((18 53,40 78 ,57 49 ))',0), 1, 0, 0, 1,-731,-173));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((49 53),(18 72))',0), 1, 0, 0, 1,-448,372));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,849,868));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT((3 86),(41 1),(12 10),(93 95)),MULTILINESTRING EMPTY)',0), 1, 0, 0, 1,385,384));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,881,237));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('LINESTRING(26 59,10 13 ,21 31 ,26 59)',0), 1, 0, 0, 1,-234,-624));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_PolygonFromText('POLYGON((25 29,22 67 ,15 85 ,17 58 ,43 15 ,88 63 ,33 50 ,6 64 ,25 29))',0), 1, 0, 0, 1,-344,-973));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(72 45)',0), 1, 0, 0, 1,-360,316));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POINT(30 41)',0), 1, 0, 0, 1,-488,-757));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}