{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING(33 67,69 82 ,87 82 ,33 67)',0), 1, 0, 0, 1,9,451));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((29 65,89 10 ,38 33 ,77 15 ,25 83 ,29 65)),((28 23,84 41 ,26 86 ,14 80 ,69 69 ,28 23)))',0), 1, 0, 0, 1,56,-68));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PointFromText('POINT(64 100)',0), 1, 0, 0, 1,-273,-228));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,261,779));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(85 9)',0), 1, 0, 0, 1,630,771));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,553,-805));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MLineFromText('MULTILINESTRING((20 54,36 7 ,84 50 ), (44 37,14 57 ,24 59 ,44 37))',0), 1, 0, 0, 1,707,-994));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((8 3),(28 96))', 0)), 1, 0, 0, 1,-407,64));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((92 34,34 78 ,70 73 ,92 34)),((59 95,9 99 ,42 55 ,59 95)))',0), 1, 0, 0, 1,262,551));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-992,-443));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ARRAY[geom]);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}