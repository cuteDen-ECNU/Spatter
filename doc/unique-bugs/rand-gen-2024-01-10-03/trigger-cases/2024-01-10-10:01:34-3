{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((16 87,32 73 ,95 1 ))',0), 1, 0, 0, 1,416,-858));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(80 93)',0), 1, 0, 0, 1,-368,624));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(51 81,25 8 ,5 81 )',0), 1, 0, 0, 1,878,786));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOLYGON(((31 31,55 98 ,70 98 ,76 18 ,31 31)),((24 72,97 86 ,78 40 ,12 98 ,24 72)),((60 92,40 49 ,38 26 ,48 96 ,60 92))),LINESTRING(20 72,25 51 ,89 76 ))',0), 1, 0, 0, 1,-563,213));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOINT((68 63),(16 82),(58 68))',0), 1, 0, 0, 1,168,-226));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(52 26)',0), 1, 0, 0, 1,-151,687));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT((74 53)))',0), 1, 0, 0, 1,-685,-335));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING(73 68,30 22 ,44 83 )',0), 1, 0, 0, 1,999,-616));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,589,381));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,961,747));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}