{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-336,557));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,754,-735));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-499,815));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT((52 17),(15 32))',0), 1, 0, 0, 1,-934,-861));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTILINESTRING((94 81,91 63 ,94 81))',0), 1, 0, 0, 1,-883,-948));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING((76 67,49 61 ,76 67))',0), 1, 0, 0, 1,-196,789));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PolygonFromText('POLYGON((66 11,99 67 ,32 38 ,74 81 ,66 11))',0), 1, 0, 0, 1,187,799));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPointFromText('MULTIPOINT((15 96),(42 14),(0 53),(95 59),(27 66),(46 82),(72 32))',0), 1, 0, 0, 1,-523,393));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((100 35,99 76 ,100 35))',0), 1, 0, 0, 1,373,-717));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((44 65),(42 65),(20 84))', 0)), 1, 0, 0, 1,634,-715));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,0, 2, 2, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 2, 2);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}