{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT((47 73),(7 19),(8 1))',0), 1, 0, 0, 1,362,-102));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-476,-485));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((56 8,58 64 ,41 87 ,10 86 ,34 96 ,56 8)),((53 39,85 11 ,74 21 ,76 74 ,37 37 ,53 39)))',0), 1, 0, 0, 1,-451,-40));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((10 9,50 75 ,97 18 ,45 76 ,10 9)))',0), 1, 0, 0, 1,9,81));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,70,976));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POINT(3 55)',0), 1, 0, 0, 1,-912,458));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((77 95,30 0 ,82 53 ,77 95)),((18 98,34 67 ,63 68 ,18 98)))',0), 1, 0, 0, 1,-404,-32));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(4 29,100 21 ,21 19 ,36 66 ,4 29),POINT(45 58))',0), 1, 0, 0, 1,-23,11));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-739,818));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-368,-120));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}