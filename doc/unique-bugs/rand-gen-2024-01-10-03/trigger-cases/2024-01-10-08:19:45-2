{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((63 17),(90 86),(92 38),(24 94))',0), 1, 0, 0, 1,-827,-630));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((69 59,21 26 ,100 35 ,82 8 ,69 59)))',0), 1, 0, 0, 1,110,-370));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(0 84,86 2 ,35 46 ,0 84)',0), 1, 0, 0, 1,-237,-906));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,47,-477));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((69 32,14 32 ,17 26 ,69 32)),((98 39,16 9 ,14 84 ,98 39)),((16 95,76 77 ,14 26 ,16 95)),((64 29,83 45 ,33 65 ,64 29)))',0), 1, 0, 0, 1,664,-766));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-172,-448));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PointFromText('POINT(5 55)',0), 1, 0, 0, 1,999,99));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MLineFromText('MULTILINESTRING((59 74,10 82 ,98 48 ))',0), 1, 0, 0, 1,756,762));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(77 42)',0), 1, 0, 0, 1,292,-216));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,286,584));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}