{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('LINESTRING(39 79,29 50 ,30 5 )',0), 1, 0, 0, 1,725,-506));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(0 63,26 84 ,26 100 )',0), 1, 0, 0, 1,-636,-581));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POLYGON((99 83,83 54 ,3 65 ,99 83))',0), 1, 0, 0, 1,639,-959));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((95 99,67 82 ,95 99))',0), 1, 0, 0, 1,-290,505));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(5 17)',0), 1, 0, 0, 1,-384,-889));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-890,-384));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_LineFromText('LINESTRING(45 75,64 64 ,18 35 ,45 75)',0), 1, 0, 0, 1,-908,-605));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOLYGON(((88 99,82 7 ,67 84 ,72 75 ,84 9 ,88 99)),((67 61,35 4 ,81 85 ,45 3 ,25 76 ,67 61)),((35 63,17 73 ,45 0 ,97 62 ,21 32 ,35 63))))',0), 1, 0, 0, 1,-65,-567));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('LINESTRING(3 39,18 21 ,50 31 ,3 39)',0), 1, 0, 0, 1,-954,-360));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,209,-182));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}