{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(12,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,282,693));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,839,-298));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-158,706));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((13 91,76 40 ,19 75 ,78 85 ,13 91))',0), 1, 0, 0, 1,-5,-702));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING((5 37,51 45 ,34 95 ))',0), 1, 0, 0, 1,281,627));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((45 57,16 51 ,82 48 ,42 80 ,10 46 ,45 57)),((93 19,6 4 ,92 30 ,98 29 ,59 51 ,93 19)),((83 53,12 9 ,10 31 ,47 89 ,95 81 ,83 53)),((18 80,59 82 ,39 47 ,48 73 ,91 10 ,18 80)))',0), 1, 0, 0, 1,250,103));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,866,460));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POINT(85 12)',0), 1, 0, 0, 1,26,519));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POLYGON((53 27,74 41 ,72 46 ,47 51 ,77 33 ,53 27))',0), 1, 0, 0, 1,-248,-264));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PolygonFromText('POLYGON((79 99,72 36 ,72 47 ,66 48 ,5 22 ,79 99))',0), 1, 0, 0, 1,743,-441));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}