{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((90 59,44 46 ,75 61 ,22 98 ,50 12 ,90 59)),((42 36,86 37 ,99 25 ,73 68 ,60 40 ,42 36)))',0), 1, 0, 0, 1,749,-470));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(38 72)',0), 1, 0, 0, 1,171,829));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,668,-139));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POLYGON((18 36,32 81 ,88 74 ,3 76 ,29 31 ,95 8 ,65 26 ,100 21 ,65 80 ,18 36))',0), 1, 0, 0, 1,858,-88));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PointFromText('POINT(30 17)',0), 1, 0, 0, 1,0,663));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POINT(92 33)',0), 1, 0, 0, 1,-79,-994));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PolygonFromText('POLYGON((89 71,70 73 ,52 89 ,25 53 ,80 94 ,89 71))',0), 1, 0, 0, 1,-138,-897));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING(54 29,16 58 ,29 65 )',0), 1, 0, 0, 1,-910,528));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOLYGON(((21 55,42 83 ,62 76 ,16 14 ,22 80 ,21 55)),((54 27,18 20 ,72 66 ,48 65 ,50 41 ,54 27)),((90 94,56 62 ,100 87 ,86 49 ,64 84 ,90 94)),((5 36,32 61 ,92 93 ,89 14 ,98 64 ,5 36))))',0), 1, 0, 0, 1,-993,734));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,97,-706));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}