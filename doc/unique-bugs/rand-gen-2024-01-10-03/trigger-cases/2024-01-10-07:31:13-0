{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POINT(50 2)',0), 1, 0, 0, 1,65,544));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING((93 96,52 9 ,93 96))',0), 1, 0, 0, 1,-738,-827));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(33 30,96 48 ,47 55 )',0), 1, 0, 0, 1,394,192));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING(66 64,33 78 ,52 6 ,66 64)',0), 1, 0, 0, 1,935,-547));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-971,405));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,231,912));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((5 100,11 58 ,79 94 ,18 68 ,5 100)),((11 15,63 80 ,25 56 ,30 41 ,11 15)))',0), 1, 0, 0, 1,-33,-634));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((68 84,26 79 ,5 100 ,42 75 ,68 84)),((95 46,89 2 ,66 85 ,53 18 ,95 46)),((52 29,36 71 ,43 71 ,54 86 ,52 29)))',0), 1, 0, 0, 1,-667,-69));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(28 81)',0), 1, 0, 0, 1,619,754));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING(49 92,57 74 ,29 26 ,49 92)',0), 1, 0, 0, 1,-292,-906));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,3, 4, 4, -3, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 5, 5);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}