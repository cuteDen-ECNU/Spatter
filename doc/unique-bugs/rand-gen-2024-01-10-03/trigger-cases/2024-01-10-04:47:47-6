{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 556)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(5,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 556)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((18 78),(90 89),(85 55),(66 83),(46 13),(23 54),(42 21))',0), 1, 0, 0, 1,-503,439));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING((7 0,72 6 ,46 26 ))',0), 1, 0, 0, 1,-64,-33));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,294,780));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((84 40),(1 59),(14 63),(45 50),(74 55),(45 90))', 0)), 1, 0, 0, 1,-479,-672));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION EMPTY)',0), 1, 0, 0, 1,-924,87));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_LineFromText('LINESTRING(24 38,10 7 ,72 22 )',0), 1, 0, 0, 1,-65,660));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,72,70));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(GEOMETRYCOLLECTION EMPTY,POINT(19 31)))',0), 1, 0, 0, 1,-890,-919));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_LineFromText('LINESTRING(12 14,35 17 ,41 59 ,12 14)',0), 1, 0, 0, 1,360,-34));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,733,-465));  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}