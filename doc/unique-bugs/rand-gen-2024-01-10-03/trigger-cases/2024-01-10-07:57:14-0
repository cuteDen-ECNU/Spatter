{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-53,353));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((45 77,24 6 ,25 79 ,45 77))',0), 1, 0, 0, 1,-13,-300));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING((63 36,58 66 ,71 35 ,63 36))',0), 1, 0, 0, 1,-966,784));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPointFromText('MULTIPOINT((41 54),(95 44))',0), 1, 0, 0, 1,-172,-124));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('LINESTRING(79 24,90 66 ,49 87 )',0), 1, 0, 0, 1,-482,-403));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_LineFromText('LINESTRING(64 57,15 40 ,78 3 ,64 57)',0), 1, 0, 0, 1,737,625));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((77 80,57 71 ,92 40 ,30 53 ,31 25 ,77 80)),((76 54,11 14 ,11 27 ,59 39 ,19 82 ,76 54)),((82 84,13 74 ,81 20 ,62 27 ,33 73 ,82 84)))',0), 1, 0, 0, 1,591,297));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,936,-52));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_LineFromText('LINESTRING(3 71,44 78 ,8 51 ,3 71)',0), 1, 0, 0, 1,657,420));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOLYGON EMPTY)',0), 1, 0, 0, 1,-273,-646));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}