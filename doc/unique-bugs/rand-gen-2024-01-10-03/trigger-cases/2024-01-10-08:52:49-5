{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,581,174));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT((81 54),(77 16),(74 50),(60 80),(83 63),(48 67),(84 23),(11 84),(11 75))',0), 1, 0, 0, 1,-634,-369));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(67 35)',0), 1, 0, 0, 1,668,-559));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((10 88,87 33 ,51 5 ,38 9 ,79 4 ,65 1 ,67 75 ,36 83 ,56 85 ,10 88))',0), 1, 0, 0, 1,-828,-750));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,558,997));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING((0 17,79 79 ,69 80 ))',0), 1, 0, 0, 1,42,-519));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,368,819));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_PointFromText('POINT(71 36)',0), 1, 0, 0, 1,-13,556));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((11 43,72 82 ,44 5 ,58 74 ,11 43)),((3 12,79 62 ,66 37 ,7 8 ,3 12)))',0), 1, 0, 0, 1,-407,912));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTILINESTRING((82 87,26 52 ,82 87))',0), 1, 0, 0, 1,-229,-7));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}