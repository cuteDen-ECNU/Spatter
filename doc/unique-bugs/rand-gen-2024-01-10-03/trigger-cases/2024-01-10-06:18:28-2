{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Intersects(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_3DIntersects(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING(26 20,78 6 ,38 12 ,26 20)',0), 1, 0, 0, 1,544,-606));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-202,-729));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(79 45,51 78 ,94 36 ,79 45)',0), 1, 0, 0, 1,756,790));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((61 69,84 18 ,25 75 ))',0), 1, 0, 0, 1,484,785));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(60 30)',0), 1, 0, 0, 1,501,974));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_LineFromText('LINESTRING(9 30,24 67 ,98 15 )',0), 1, 0, 0, 1,-76,937));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,66,-834));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING(44 34,55 46 ,56 9 ,44 34)',0), 1, 0, 0, 1,-42,945));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_LineFromText('LINESTRING(89 66,50 48 ,38 98 )',0), 1, 0, 0, 1,-785,256));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((69 31,90 39 ,36 90 ,70 62 ,69 31)),((86 66,87 95 ,8 63 ,54 87 ,86 66)),((8 5,20 17 ,93 89 ,86 53 ,8 5)),((25 52,68 73 ,98 8 ,18 75 ,25 52)))',0), 1, 0, 0, 1,-210,58));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),16, 0, -12, 12, 0, 16, 0, 20, 0, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 20, 20);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}