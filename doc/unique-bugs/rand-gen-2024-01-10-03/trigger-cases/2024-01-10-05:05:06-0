{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POLYGON((95 12,4 0 ,41 75 ,95 12))',0), 1, 0, 0, 1,-79,938));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,14,191));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((8 29),(53 16),(65 5))',0), 1, 0, 0, 1,678,-625));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((70 23),(44 84))', 0)), 1, 0, 0, 1,487,818));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(23 74)',0), 1, 0, 0, 1,-30,-960));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((22 22,47 60 ,66 27 ,87 68 ,2 25 ,22 22)),((87 16,37 56 ,78 94 ,97 98 ,59 42 ,87 16)),((68 16,73 82 ,54 73 ,2 1 ,67 3 ,68 16)))',0), 1, 0, 0, 1,-172,340));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTIPOINT((35 24),(94 20),(98 69),(63 29),(82 79),(26 2))',0), 1, 0, 0, 1,112,334));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING((39 49,98 83 ,39 49))',0), 1, 0, 0, 1,-252,-924));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('LINESTRING(94 52,94 41 ,58 78 ,94 52)',0), 1, 0, 0, 1,608,707));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,652,885));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}