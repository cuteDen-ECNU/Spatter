{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((69 49,89 72 ,32 99 ,24 92 ,69 49)),((56 45,50 51 ,9 16 ,24 6 ,56 45)),((83 28,62 16 ,74 54 ,96 24 ,83 28)))',0), 1, 0, 0, 1,-9,-410));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-714,-734));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((61 31))',0), 1, 0, 0, 1,656,-617));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING(2 2,49 60 ,40 7 ,77 89 ,2 2))',0), 1, 0, 0, 1,-955,-706));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_LineFromText('LINESTRING(19 60,48 31 ,18 49 )',0), 1, 0, 0, 1,146,-929));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(96 49)',0), 1, 0, 0, 1,510,-987));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTILINESTRING EMPTY)',0), 1, 0, 0, 1,-505,-697));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING(59 74,21 91 ,78 39 ,59 74)',0), 1, 0, 0, 1,564,-669));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(86 97))',0), 1, 0, 0, 1,493,13));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,568,126));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}