{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((11 41,32 75 ))',0), 1, 0, 0, 1,365,724));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(19 30)',0), 1, 0, 0, 1,99,-291));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-517,-446));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((7 14,72 21 ,87 9 ,22 58 ,45 62 ,7 14))',0), 1, 0, 0, 1,-738,-848));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-183,633));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((91 63,84 4 ,32 98 ,98 70 ,91 63)),((20 50,75 75 ,85 41 ,10 26 ,20 50)))',0), 1, 0, 0, 1,-319,634));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_LineFromText('LINESTRING(53 95,77 8 ,30 84 ,53 95)',0), 1, 0, 0, 1,-476,-989));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPointFromText('MULTIPOINT((41 47),(13 21))',0), 1, 0, 0, 1,-601,732));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_LineFromText('LINESTRING(5 56,43 0 ,46 64 )',0), 1, 0, 0, 1,-626,42));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING((82 40,80 44 ,82 40)))',0), 1, 0, 0, 1,-694,635));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}