{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POINT(2 90)',0), 1, 0, 0, 1,-507,-58));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT((12 4),(1 66),(54 87),(37 93))',0), 1, 0, 0, 1,715,965));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(75 36,72 5 ,3 98 )',0), 1, 0, 0, 1,869,896));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-656,915));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PolygonFromText('POLYGON((12 56,37 48 ,65 47 ,88 50 ,54 14 ,50 71 ,83 6 ,93 85 ,21 75 ,12 56))',0), 1, 0, 0, 1,11,-908));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,-119,171));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PolygonFromText('POLYGON((68 53,17 49 ,66 3 ,67 81 ,87 74 ,19 83 ,36 88 ,27 14 ,68 53))',0), 1, 0, 0, 1,1000,971));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-948,-390));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(10 31)',0), 1, 0, 0, 1,607,-509));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING(93 77,60 34 ,88 45 )',0), 1, 0, 0, 1,989,-475));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}