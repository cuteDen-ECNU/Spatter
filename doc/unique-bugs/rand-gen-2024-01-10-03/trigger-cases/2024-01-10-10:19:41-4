{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((67 52),(2 62),(78 79),(6 76),(75 24),(2 45),(85 19),(6 57),(55 50))',0), 1, 0, 0, 1,-717,-522));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(77 54)',0), 1, 0, 0, 1,-523,757));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-129,489));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-540,-847));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((57 88,26 40 ,76 66 ,57 88)),((99 22,33 37 ,85 69 ,99 22)))',0), 1, 0, 0, 1,156,-703));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((10 86),(33 45),(22 32),(56 32),(29 55),(69 78),(30 91),(65 59),(55 6),(38 34),(100 18))', 0)), 1, 0, 0, 1,-546,-353));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-97,488));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-315,540));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('LINESTRING(50 40,78 33 ,57 59 ,50 40)',0), 1, 0, 0, 1,-175,883));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((5 20,85 89 ,56 46 ,5 20)),((67 31,73 6 ,72 13 ,67 31)))',0), 1, 0, 0, 1,599,-114));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}