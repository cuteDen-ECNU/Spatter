{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 899)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(32,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 899)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(44,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PolygonFromText('POLYGON((40 13,73 11 ,84 94 ,16 70 ,81 28 ,8 20 ,40 13))',0), 1, 0, 0, 1,989,-249));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(6 51,57 13 ,8 50 )',0), 1, 0, 0, 1,-769,885));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(45 54)',0), 1, 0, 0, 1,-273,668));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPointFromText('MULTIPOINT((13 12),(9 73),(66 84),(23 80),(89 16),(85 83),(62 85),(29 73),(22 3))',0), 1, 0, 0, 1,148,646));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_LineFromText('LINESTRING(40 70,28 35 ,29 90 )',0), 1, 0, 0, 1,-133,-877));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING(87 52,29 98 ,59 19 )',0), 1, 0, 0, 1,-327,638));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PolygonFromText('POLYGON((26 8,15 12 ,40 66 ,26 8))',0), 1, 0, 0, 1,-847,81));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(40 20),MULTIPOLYGON EMPTY)',0), 1, 0, 0, 1,-664,593));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((54 62,87 21 ))',0), 1, 0, 0, 1,-281,-75));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MLineFromText('MULTILINESTRING((25 40,92 31 ), (82 25,94 49 ))',0), 1, 0, 0, 1,81,-300));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}