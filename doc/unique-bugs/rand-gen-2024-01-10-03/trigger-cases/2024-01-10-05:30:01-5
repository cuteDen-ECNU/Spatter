{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(20,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,182,143));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING(96 49,33 11 ,6 23 ,96 49)',0), 1, 0, 0, 1,753,278));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(64 40,93 57 ,72 61 ,64 40)',0), 1, 0, 0, 1,463,-914));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((95 48,10 73 ,24 64 ,95 48)),((20 83,0 18 ,58 2 ,20 83)),((23 57,81 97 ,70 52 ,23 57)))',0), 1, 0, 0, 1,625,-45));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-264,-347));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-742,-901));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PolygonFromText('POLYGON((29 80,61 42 ,4 59 ,59 26 ,51 40 ,89 56 ,15 56 ,65 42 ,75 48 ,29 80))',0), 1, 0, 0, 1,-605,-835));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-670,664));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,647,441));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPointFromText('MULTIPOINT((6 99),(6 69),(16 40),(80 1),(72 57))',0), 1, 0, 0, 1,199,700));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}