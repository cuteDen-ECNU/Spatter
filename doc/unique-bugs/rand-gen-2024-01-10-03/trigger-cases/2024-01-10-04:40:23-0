{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((38 16,73 92 ,91 21 ,38 16))',0), 1, 0, 0, 1,-521,840));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,258,445));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(89 30)',0), 1, 0, 0, 1,418,-79));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((66 55,78 83 ,19 76 ,12 29 ,3 86 ,66 55)),((35 20,28 97 ,0 18 ,79 60 ,32 59 ,35 20)))',0), 1, 0, 0, 1,828,991));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(48 19)',0), 1, 0, 0, 1,387,460));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POINT(84 94)',0), 1, 0, 0, 1,-132,757));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,646,-474));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((58 10,89 20 ,84 24 ,58 10)),((39 29,90 45 ,24 65 ,39 29)),((2 52,74 12 ,72 61 ,2 52)),((90 4,19 62 ,73 33 ,90 4)))',0), 1, 0, 0, 1,-853,-163));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((68 45),(78 68),(51 64),(61 21),(9 65),(21 77),(1 33))', 0)), 1, 0, 0, 1,-697,-82));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POINT(62 12)',0), 1, 0, 0, 1,-863,-748));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}