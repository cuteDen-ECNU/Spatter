{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(58 26)',0), 1, 0, 0, 1,-138,105));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(60 49)',0), 1, 0, 0, 1,-794,-600));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(12 38)',0), 1, 0, 0, 1,637,-775));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((20 83,81 37 ,94 39 ,88 4 ,44 88 ,20 83)),((32 13,6 22 ,67 34 ,22 51 ,64 44 ,32 13)))',0), 1, 0, 0, 1,610,743));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((71 8,17 93 ,16 75 ,71 8)),((56 27,91 28 ,87 16 ,56 27)),((19 63,66 72 ,1 93 ,19 63)))',0), 1, 0, 0, 1,435,857));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOINT((3 7),(29 20),(47 25),(24 37),(66 46),(77 98),(22 0),(1 21),(82 47))',0), 1, 0, 0, 1,-637,-395));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,730,-989));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_PointFromText('POINT(95 96)',0), 1, 0, 0, 1,633,-227));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-608,950));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,268,9));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}