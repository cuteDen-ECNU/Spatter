{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(20,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON EMPTY)',0), 1, 0, 0, 1,-115,825));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-458,-947));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-448,188));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON((86 3,8 46 ,48 21 ,42 36 ,57 91 ,86 3)))',0), 1, 0, 0, 1,-916,-470));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((79 56),(44 59),(44 9),(26 95),(34 87),(74 48),(41 58),(55 44),(21 99),(75 93),(97 76))', 0)), 1, 0, 0, 1,-238,630));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOINT((95 55),(36 69))',0), 1, 0, 0, 1,628,714));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOLYGON EMPTY)',0), 1, 0, 0, 1,564,-174));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MLineFromText('MULTILINESTRING((33 40,42 79 ,33 57 ,33 40))',0), 1, 0, 0, 1,162,-850));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('LINESTRING(34 1,12 71 ,32 64 )',0), 1, 0, 0, 1,435,-324));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,518,874));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}