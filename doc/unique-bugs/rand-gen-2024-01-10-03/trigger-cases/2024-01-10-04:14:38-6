{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(MULTILINESTRING((14 20,50 4 ), (51 76,58 41 ,51 76))),LINESTRING(65 22,46 34 ,16 36 ))',0), 1, 0, 0, 1,150,-334));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,120,-196));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,787,-283));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT((53 81),(56 29),(0 4),(62 40),(15 95),(82 61))',0), 1, 0, 0, 1,-982,826));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING((76 25,20 84 ), (75 96,15 32 )))',0), 1, 0, 0, 1,173,962));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(80 97)',0), 1, 0, 0, 1,438,-147));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POLYGON((39 99,73 62 ,10 30 ,23 60 ,4 44 ,39 99))',0), 1, 0, 0, 1,764,-573));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POINT(84 74)',0), 1, 0, 0, 1,266,-946));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(61 62)',0), 1, 0, 0, 1,-365,433));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POLYGON((99 37,11 69 ,66 25 ,36 35 ,3 71 ,0 60 ,1 4 ,16 92 ,6 56 ,7 12 ,99 37))',0), 1, 0, 0, 1,589,768));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}