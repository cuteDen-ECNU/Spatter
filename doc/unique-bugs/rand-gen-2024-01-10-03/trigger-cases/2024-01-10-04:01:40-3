{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('LINESTRING(12 9,84 52 ,13 53 )',0), 1, 0, 0, 1,664,774));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(7 61,35 5 ,70 18 ,50 10 ,11 90 ),MULTIPOINT((27 81),(69 24),(34 98),(33 82)))',0), 1, 0, 0, 1,302,-969));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POLYGON((17 53,38 77 ,84 84 ,9 14 ,85 19 ,88 32 ,60 30 ,17 53))',0), 1, 0, 0, 1,-26,-197));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POLYGON((49 7,8 94 ,88 73 ,66 45 ,52 100 ,49 7))',0), 1, 0, 0, 1,-867,-255));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTILINESTRING((93 58,75 84 ,9 83 ,93 58), (6 22,93 67 ,70 7 ))',0), 1, 0, 0, 1,-708,-948));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-204,759));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,854,-647));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-102,357));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('LINESTRING(98 22,60 75 ,82 29 ,98 22)',0), 1, 0, 0, 1,-703,608));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POLYGON((55 65,83 14 ,4 64 ,70 76 ,26 9 ,4 2 ,55 65))',0), 1, 0, 0, 1,484,128));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}