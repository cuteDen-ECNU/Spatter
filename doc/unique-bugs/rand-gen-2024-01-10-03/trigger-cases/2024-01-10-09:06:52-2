{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PolygonFromText('POLYGON((42 76,52 42 ,45 34 ,38 85 ,98 14 ,65 32 ,88 44 ,42 76))',0), 1, 0, 0, 1,192,858));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,475,945));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,765,127));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT((14 11)),POLYGON((96 56,62 62 ,77 14 ,18 65 ,52 43 ,96 56)))',0), 1, 0, 0, 1,247,-759));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,138,877));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-433,-573));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,-800,2));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTILINESTRING((84 96,84 21 ,84 96), (4 5,61 67 )))',0), 1, 0, 0, 1,785,684));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT((7 21),(80 86))',0), 1, 0, 0, 1,-341,697));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POINT(72 14)',0), 1, 0, 0, 1,451,-179));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}