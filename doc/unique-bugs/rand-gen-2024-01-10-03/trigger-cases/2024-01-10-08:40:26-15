{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 450)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(10,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 450)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(7,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-315,321));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT((47 69),(33 43),(13 72))',0), 1, 0, 0, 1,-352,-318));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((92 100))',0), 1, 0, 0, 1,466,-919));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING(89 74,36 82 ,41 1 ,89 74)',0), 1, 0, 0, 1,-524,-967));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PointFromText('POINT(26 16)',0), 1, 0, 0, 1,181,168));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POINT(19 29)',0), 1, 0, 0, 1,706,-103));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PointFromText('POINT(66 11)',0), 1, 0, 0, 1,641,-184));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOLYGON EMPTY,GEOMETRYCOLLECTION(LINESTRING(92 14,30 20 ,73 41 )))',0), 1, 0, 0, 1,311,32));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((26 22,95 57 ,26 22), (99 33,89 83 ,99 33))',0), 1, 0, 0, 1,-665,-248));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('LINESTRING(38 32,42 57 ,89 46 )',0), 1, 0, 0, 1,593,918));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}