{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((27 79,74 72 ,68 4 ,55 57 ,68 45 ,27 79)),((10 68,36 30 ,91 31 ,98 65 ,97 80 ,10 68)))',0), 1, 0, 0, 1,-597,-754));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,237,595));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING((74 67,66 16 ,33 19 ))',0), 1, 0, 0, 1,672,-442));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING((14 21,45 1 ,14 21))',0), 1, 0, 0, 1,881,-467));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((63 11,64 50 ,42 28 ,63 11)),LINESTRING(47 52,13 4 ,64 58 ,84 92 ,47 52))',0), 1, 0, 0, 1,324,-645));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,911,-337));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,655,529));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING(77 78,45 70 ,67 9 )',0), 1, 0, 0, 1,689,173));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-953,542));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PolygonFromText('POLYGON((86 11,40 9 ,54 41 ,7 78 ,4 29 ,86 11))',0), 1, 0, 0, 1,-524,-810));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}