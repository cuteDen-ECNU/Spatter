{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((37 35,2 93 ,7 3 ,37 35), (72 49,66 77 ,31 34 ))',0), 1, 0, 0, 1,-584,201));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING((28 46,65 32 ,80 34 ,28 46))',0), 1, 0, 0, 1,110,-566));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((3 99),(44 36))', 0)), 1, 0, 0, 1,-715,437));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((32 40,11 46 ,54 5 ,32 40)),((39 62,34 88 ,73 20 ,39 62)))',0), 1, 0, 0, 1,109,36));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_LineFromText('LINESTRING(4 49,6 34 ,13 99 )',0), 1, 0, 0, 1,176,371));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPointFromText('MULTIPOINT((10 61),(22 75),(88 5),(58 79),(52 5),(16 44),(32 96),(60 24),(52 20))',0), 1, 0, 0, 1,-168,118));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_LineFromText('LINESTRING(72 79,43 59 ,39 19 )',0), 1, 0, 0, 1,-683,-519));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,461,-176));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,195,962));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPointFromText('MULTIPOINT((34 10),(56 23),(69 82))',0), 1, 0, 0, 1,739,284));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,3, 4, 4, -3, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 5, 5);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}