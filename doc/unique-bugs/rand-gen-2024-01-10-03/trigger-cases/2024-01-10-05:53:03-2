{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((94 65,31 19 ,37 38 ,94 65), (34 53,36 33 ,93 11 ))',0), 1, 0, 0, 1,746,941));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((33 9,26 55 ,25 93 ,3 3 ,33 9)),((29 90,15 30 ,64 30 ,37 51 ,29 90)),((80 20,83 62 ,79 50 ,23 80 ,80 20)),((39 28,26 56 ,90 29 ,78 32 ,39 28)))',0), 1, 0, 0, 1,669,-741));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(4 36)',0), 1, 0, 0, 1,-480,-591));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-752,-770));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(30 54)',0), 1, 0, 0, 1,222,241));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING((73 23,19 88 ,73 23))',0), 1, 0, 0, 1,340,342));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,707,825));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING((18 92,5 0 ,18 92))',0), 1, 0, 0, 1,-513,417));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOINT((5 2),(69 33),(35 69),(7 14),(73 0),(26 37),(27 13),(70 90))',0), 1, 0, 0, 1,257,-933));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PointFromText('POINT(18 77)',0), 1, 0, 0, 1,-156,-888));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}