{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(20,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('LINESTRING(23 7,88 82 ,9 97 ,23 7)',0), 1, 0, 0, 1,803,44));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-873,380));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-783,351));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(13 4))',0), 1, 0, 0, 1,-438,-279));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-651,-905));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MLineFromText('MULTILINESTRING((24 76,30 18 ,88 52 ,24 76))',0), 1, 0, 0, 1,844,657));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-918,-147));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,759,36));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((4 54,69 65 ))',0), 1, 0, 0, 1,323,440));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('POLYGON((92 29,32 53 ,89 31 ,81 55 ,44 84 ,76 90 ,92 29))',0), 1, 0, 0, 1,170,-244));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,3, 4, 4, -3, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 5, 5);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}