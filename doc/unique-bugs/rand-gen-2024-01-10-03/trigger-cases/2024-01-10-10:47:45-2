{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PolygonFromText('POLYGON((28 42,21 78 ,81 55 ,64 21 ,72 79 ,49 41 ,29 73 ,28 42))',0), 1, 0, 0, 1,1000,-958));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((4 57,17 77 ,92 59 ,2 94 ,53 75 ,4 57)),((48 35,77 57 ,100 96 ,25 51 ,48 1 ,48 35)))',0), 1, 0, 0, 1,-595,-304));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING((90 83,75 44 ))',0), 1, 0, 0, 1,-843,-98));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POINT(14 19)',0), 1, 0, 0, 1,644,-422));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POLYGON((75 31,88 77 ,89 27 ,3 50 ,18 79 ,75 31))',0), 1, 0, 0, 1,-90,-2));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,447,166));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTILINESTRING((97 56,6 4 ))',0), 1, 0, 0, 1,628,692));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,223,-863));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTILINESTRING((63 29,54 83 ,21 90 ,63 29), (78 44,16 10 ,55 26 ,78 44))',0), 1, 0, 0, 1,623,314));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOINT((97 64),(96 29))',0), 1, 0, 0, 1,-126,-759));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}