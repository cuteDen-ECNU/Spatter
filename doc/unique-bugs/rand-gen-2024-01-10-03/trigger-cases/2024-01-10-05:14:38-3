{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 749)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 749)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(4 37))',0), 1, 0, 0, 1,-423,-792));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON EMPTY,MULTIPOINT((29 0),(99 21),(65 74)))',0), 1, 0, 0, 1,501,968));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,776,-374));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-540,753));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((28 51),(24 24),(14 88),(51 31),(3 68))', 0)), 1, 0, 0, 1,559,-451));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PolygonFromText('POLYGON((96 32,8 12 ,81 99 ,9 62 ,46 0 ,10 34 ,29 36 ,99 73 ,0 63 ,96 32))',0), 1, 0, 0, 1,190,-237));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,-472,-470));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((38 59,100 49 ,75 11 ,38 59)),((63 83,6 66 ,87 49 ,63 83)))',0), 1, 0, 0, 1,-614,-150));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(47 78)',0), 1, 0, 0, 1,654,464));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,761,613));  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}