{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(94 21))',0), 1, 0, 0, 1,-824,-934));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(18 69)',0), 1, 0, 0, 1,-220,764));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PolygonFromText('POLYGON((5 83,90 17 ,51 67 ,21 42 ,43 15 ,43 32 ,7 5 ,69 81 ,80 73 ,5 83))',0), 1, 0, 0, 1,410,301));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-902,607));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTILINESTRING((18 16,65 57 ))',0), 1, 0, 0, 1,-121,-847));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTILINESTRING((82 95,85 5 ,29 3 ,82 95), (86 17,53 48 ,95 91 ))',0), 1, 0, 0, 1,412,82));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POINT(79 62)',0), 1, 0, 0, 1,-137,698));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION EMPTY,GEOMETRYCOLLECTION(MULTIPOINT EMPTY))',0), 1, 0, 0, 1,291,328));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((18 38,18 41 ,35 58 ,18 38))',0), 1, 0, 0, 1,518,59));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPointFromText('MULTIPOINT((84 83))',0), 1, 0, 0, 1,-630,963));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}