{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((49 72,45 55 ,86 51 ,49 72))',0), 1, 0, 0, 1,-216,696));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING((8 92,44 19 ))',0), 1, 0, 0, 1,-990,-307));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,567,479));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING(36 48,90 8 ,18 1 ,36 48)',0), 1, 0, 0, 1,-338,166));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING((72 90,57 91 ,64 1 ,72 90), (18 0,10 32 ,33 82 ,18 0))',0), 1, 0, 0, 1,208,-431));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-260,216));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PointFromText('POINT(23 40)',0), 1, 0, 0, 1,-754,359));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POINT(13 84)',0), 1, 0, 0, 1,-900,-668));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(98 73),POINT(58 57))',0), 1, 0, 0, 1,998,-658));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((45 29,22 2 ,10 36 ,14 24 ,48 31 ,45 29)),((70 46,61 50 ,39 21 ,21 48 ,17 40 ,70 46)),((89 92,37 13 ,21 56 ,86 71 ,34 41 ,89 92)))',0), 1, 0, 0, 1,618,313));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}