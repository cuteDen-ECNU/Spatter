{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 695)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(5,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 695)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(8,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,264,710));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,522,893));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POLYGON((74 15,1 42 ,82 97 ,81 30 ,69 22 ,83 54 ,70 9 ,74 15))',0), 1, 0, 0, 1,104,269));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POLYGON((21 59,27 54 ,23 17 ,35 22 ,75 25 ,25 35 ,36 74 ,62 5 ,3 60 ,23 48 ,21 59))',0), 1, 0, 0, 1,473,884));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPointFromText('MULTIPOINT((42 30),(34 34))',0), 1, 0, 0, 1,-356,435));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOINT((48 82),(45 42),(99 26),(13 46),(45 10),(56 62),(49 40),(88 83))',0), 1, 0, 0, 1,-800,-745));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POINT(86 11)',0), 1, 0, 0, 1,-698,-52));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('POINT(60 60)',0), 1, 0, 0, 1,575,548));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,572,-666));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(56 89),MULTIPOLYGON EMPTY)',0), 1, 0, 0, 1,-735,-170));  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}