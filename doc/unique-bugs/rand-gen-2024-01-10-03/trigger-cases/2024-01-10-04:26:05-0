{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-631,352));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,239,247));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING((72 30,30 50 ,72 30))',0), 1, 0, 0, 1,480,-445));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING(59 21,8 2 ,27 82 )',0), 1, 0, 0, 1,73,725));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,800,283));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPointFromText('MULTIPOINT((73 30),(26 82),(97 28),(33 27),(93 75),(89 96),(34 73),(45 69))',0), 1, 0, 0, 1,369,935));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POLYGON((49 64,51 31 ,66 64 ,89 27 ,49 64))',0), 1, 0, 0, 1,-255,5));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPointFromText('MULTIPOINT((18 69),(65 27),(100 59),(67 22),(15 77),(95 67),(71 22),(31 54),(74 45),(10 76),(29 38))',0), 1, 0, 0, 1,-458,-591));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MLineFromText('MULTILINESTRING((24 14,69 33 ,67 0 ,24 14))',0), 1, 0, 0, 1,-28,-95));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING(23 23,7 28 ,33 1 ,23 23)',0), 1, 0, 0, 1,-13,122));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}