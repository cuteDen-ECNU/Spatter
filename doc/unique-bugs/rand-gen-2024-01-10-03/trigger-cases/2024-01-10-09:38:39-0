{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('LINESTRING(77 44,95 85 ,12 36 ,77 44)',0), 1, 0, 0, 1,-73,-605));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,307,321));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((77 98),(71 75),(7 62),(75 31),(0 11),(25 30),(43 53),(74 27))',0), 1, 0, 0, 1,-755,-952));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-625,-332));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPointFromText('MULTIPOINT((30 79),(45 94),(9 40))',0), 1, 0, 0, 1,17,771));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('POLYGON((95 26,7 68 ,24 88 ,96 9 ,94 64 ,31 54 ,76 1 ,95 26))',0), 1, 0, 0, 1,-708,630));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING(16 71,14 29 ,57 38 ))',0), 1, 0, 0, 1,-151,-668));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPointFromText('MULTIPOINT((78 73),(57 37),(19 65),(23 69),(6 44),(43 31))',0), 1, 0, 0, 1,-80,241));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_PointFromText('POINT(89 32)',0), 1, 0, 0, 1,242,-341));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING(92 81,17 6 ,44 42 )',0), 1, 0, 0, 1,-881,977));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}