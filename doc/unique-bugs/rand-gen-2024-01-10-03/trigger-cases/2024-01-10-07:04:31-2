{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((45 37,78 82 ,46 48 ,45 37)))',0), 1, 0, 0, 1,-858,-805));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,336,-900));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POLYGON((38 98,48 74 ,76 47 ,72 38 ,87 10 ,81 21 ,15 13 ,28 25 ,38 98))',0), 1, 0, 0, 1,212,-174));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((36 94,47 45 ,19 14 ,36 94))',0), 1, 0, 0, 1,961,-394));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(61 98)',0), 1, 0, 0, 1,-523,-995));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,711,-669));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('POINT(3 16)',0), 1, 0, 0, 1,574,-410));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTIPOINT((35 31),(95 42),(57 49),(36 59),(79 95),(36 17),(92 25),(24 27),(27 59),(95 44),(41 73))',0), 1, 0, 0, 1,138,307));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((92 48,74 96 ,64 80 ,23 0 ,79 31 ,92 48)),((93 66,46 24 ,17 18 ,45 96 ,88 36 ,93 66)))',0), 1, 0, 0, 1,92,-69));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PointFromText('POINT(51 99)',0), 1, 0, 0, 1,101,639));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}