{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((59 25,36 72 ,26 49 ))',0), 1, 0, 0, 1,-541,897));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((30 33,27 75 ,46 55 ,75 74 ,28 44 ,69 9 ,52 5 ,30 33))',0), 1, 0, 0, 1,129,869));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-373,707));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((25 75),(71 52),(67 33),(82 42),(33 35),(81 36),(56 33),(79 82),(6 86),(86 100),(76 39))', 0)), 1, 0, 0, 1,697,-486));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-378,543));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(38 85)',0), 1, 0, 0, 1,748,-578));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING EMPTY,MULTIPOINT EMPTY)',0), 1, 0, 0, 1,-731,582));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-610,846));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POLYGON((12 12,5 71 ,18 69 ,69 94 ,16 46 ,67 59 ,99 42 ,89 50 ,84 11 ,12 12))',0), 1, 0, 0, 1,19,274));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_PointFromText('POINT(86 58)',0), 1, 0, 0, 1,-221,427));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}