{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-869,-196));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(34 79)',0), 1, 0, 0, 1,156,-459));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((75 23,43 1 ,98 46 ,79 81 ,87 23 ,75 23)),((87 68,42 24 ,67 9 ,67 99 ,72 11 ,87 68)),((3 17,12 17 ,34 100 ,32 73 ,30 7 ,3 17)))',0), 1, 0, 0, 1,-630,756));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING((9 53,81 33 ,9 53), (7 83,69 37 ))',0), 1, 0, 0, 1,318,-149));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,723,747));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,243,695));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_PointFromText('POINT(92 44)',0), 1, 0, 0, 1,-496,-8));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MPointFromText('MULTIPOINT((41 38),(31 91),(0 28),(66 91),(69 44),(98 64))',0), 1, 0, 0, 1,816,-111));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-8,-156));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,598,384));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ARRAY[geom]);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}