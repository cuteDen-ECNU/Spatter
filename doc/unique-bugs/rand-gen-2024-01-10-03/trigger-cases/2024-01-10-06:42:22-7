{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(91 70)',0), 1, 0, 0, 1,-366,598));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT((1 6),(39 53))',0), 1, 0, 0, 1,-250,506));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((56 0),(54 81),(70 26),(6 13),(0 62),(30 13))',0), 1, 0, 0, 1,872,629));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING(99 52,21 60 ,10 30 )',0), 1, 0, 0, 1,914,486));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((61 24,46 94 ,88 3 ,75 40 ,61 24)),((9 7,16 70 ,33 35 ,2 29 ,9 7)),((55 48,39 66 ,56 4 ,69 38 ,55 48)),((60 50,11 73 ,1 27 ,59 39 ,60 50)))',0), 1, 0, 0, 1,663,139));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-703,299));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,204,70));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING((37 17,36 21 ), (55 99,64 96 ))',0), 1, 0, 0, 1,48,601));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POLYGON((99 65,32 75 ,44 6 ,99 65))',0), 1, 0, 0, 1,-643,-238));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('MULTIPOINT((65 69),(89 38))',0), 1, 0, 0, 1,-793,-392));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}