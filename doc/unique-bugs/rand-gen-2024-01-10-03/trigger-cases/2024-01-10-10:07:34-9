{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING((4 98,73 19 ,36 4 ,4 98), (52 47,15 10 ,28 82 ))',0), 1, 0, 0, 1,503,606));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,644,658));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,366,-248));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,510,-632));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PointFromText('POINT(36 19)',0), 1, 0, 0, 1,-264,27));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,510,-562));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MPointFromText('MULTIPOINT((64 39),(53 71),(77 100),(92 61),(74 34),(27 32),(88 0),(14 44))',0), 1, 0, 0, 1,62,336));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT((97 69),(8 27),(93 6)),POLYGON((93 38,55 87 ,7 38 ,93 38)))',0), 1, 0, 0, 1,226,-356));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_LineFromText('LINESTRING(73 83,88 19 ,7 79 ,73 83)',0), 1, 0, 0, 1,446,558));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_LineFromText('LINESTRING(74 16,66 42 ,63 40 )',0), 1, 0, 0, 1,305,804));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}