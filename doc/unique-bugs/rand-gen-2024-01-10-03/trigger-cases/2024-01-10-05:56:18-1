{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 770)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(24,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 770)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(28,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING(49 35,28 53 ,76 9 ,49 35)',0), 1, 0, 0, 1,233,749));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((14 47,38 92 ,1 75 ,14 47)),((75 66,5 32 ,65 10 ,75 66)),((20 0,10 58 ,70 65 ,20 0)))',0), 1, 0, 0, 1,245,-58));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(7 68,5 15 ,80 37 )',0), 1, 0, 0, 1,38,239));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((30 41))', 0)), 1, 0, 0, 1,-932,-262));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_PointFromText('POINT(53 88)',0), 1, 0, 0, 1,715,-261));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_PointFromText('POINT(81 48)',0), 1, 0, 0, 1,-564,528));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('LINESTRING(75 88,56 53 ,69 79 )',0), 1, 0, 0, 1,165,863));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_MLineFromText('MULTILINESTRING((41 83,89 7 ,77 1 ), (87 49,45 88 ,3 2 ,87 49))',0), 1, 0, 0, 1,318,-109));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POINT(6 0)',0), 1, 0, 0, 1,22,581));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION EMPTY,LINESTRING(93 3,71 76 ,65 44 ,93 3))',0), 1, 0, 0, 1,502,67));  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}