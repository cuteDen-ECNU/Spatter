{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,990,-599));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOLYGON(((10 86,77 32 ,0 88 ,10 86)),((87 58,14 41 ,99 38 ,87 58)),((100 79,44 27 ,11 25 ,100 79))))',0), 1, 0, 0, 1,-639,-942));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(35 7,76 85 ,98 46 )',0), 1, 0, 0, 1,-11,-722));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING((13 89,31 73 ,83 30 ,13 89))',0), 1, 0, 0, 1,978,-671));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_GeomFromText('POINT(88 53)',0), 1, 0, 0, 1,800,813));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_MLineFromText('MULTILINESTRING((9 21,29 92 ,40 0 ,9 21))',0), 1, 0, 0, 1,687,-438));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_GeomFromText('MULTIPOINT((58 70),(2 36),(38 61),(55 19),(34 32),(76 87),(16 64),(97 32),(52 5),(86 21))',0), 1, 0, 0, 1,-650,143));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,879,-685));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,317,-472));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MLineFromText('MULTILINESTRING((36 20,41 67 ), (66 89,40 4 ,66 89))',0), 1, 0, 0, 1,30,230));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}