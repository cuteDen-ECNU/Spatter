{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('LINESTRING(41 49,79 37 ,8 73 )',0), 1, 0, 0, 1,442,417));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON((35 95,88 16 ,89 18 ,80 4 ,35 95)))',0), 1, 0, 0, 1,511,675));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,487,22));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT((24 44),(87 25),(42 74),(82 0))',0), 1, 0, 0, 1,289,-453));  INSERT INTO t0 (id, geom) VALUES (4,ST_Affine(ST_MLineFromText('MULTILINESTRING((7 98,91 40 ,5 93 ), (25 88,31 2 ,72 60 ))',0), 1, 0, 0, 1,-143,-236));  INSERT INTO t0 (id, geom) VALUES (5,ST_Affine(ST_LineFromText('LINESTRING(58 76,41 71 ,39 67 ,58 76)',0), 1, 0, 0, 1,-862,-932));  INSERT INTO t0 (id, geom) VALUES (6,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-491,-121));  INSERT INTO t0 (id, geom) VALUES (7,ST_Affine(ST_GeomFromText('MULTILINESTRING((32 83,43 26 ,32 83))',0), 1, 0, 0, 1,402,-150));  INSERT INTO t0 (id, geom) VALUES (8,ST_Affine(ST_GeomFromText('POLYGON((69 34,57 10 ,63 82 ,30 9 ,69 34))',0), 1, 0, 0, 1,453,532));  INSERT INTO t0 (id, geom) VALUES (9,ST_Affine(ST_MPointFromText('MULTIPOINT((96 48),(68 70),(50 29))',0), 1, 0, 0, 1,885,-887));  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}