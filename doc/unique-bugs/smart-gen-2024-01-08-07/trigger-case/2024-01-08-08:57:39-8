{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 684)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(15,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 684)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT EMPTY,LINESTRING EMPTY)',0), 1, 0, 0, 1,-983,-949));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING(76 17,14 100 ,87 63 )',0), 1, 0, 0, 1,-340,-575));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POINT(76 96),MULTILINESTRING((100 76,53 2 ,100 76)))',0), 1, 0, 0, 1,-271,171));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(89 48),MULTIPOINT((75 20),(50 43)))',0), 1, 0, 0, 1,224,785));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 4         and t2.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 1         and t2.id = 1;  INSERT INTO t0 (id, geom)          SELECT 7, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 8, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 9 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 8         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 0         and t2.id = 7;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}