{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((74 29,44 61 ,98 36 ,88 78 ,74 29)),((97 77,35 21 ,88 47 ,9 55 ,97 77)),((25 91,41 51 ,1 31 ,4 32 ,25 91)))',0), 1, 0, 0, 1,-877,-913));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON((37 34,47 44 ,89 78 ,50 85 ,63 87 ,37 34)))',0), 1, 0, 0, 1,-982,383));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-726,283));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,870,-64));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Scale(t.geom, 3, 4)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 6, ST_ForcePolygonCW(t0.geom)          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 8, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 6;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 6         and t2.id = 7;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}