{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 365)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(18,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 365)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(17,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING(28 83,23 87 ,26 80 ,28 83))',0), 1, 0, 0, 1,413,468));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(LINESTRING(34 52,91 26 ,27 24 ,52 75 ,79 94 ,34 52)),POLYGON((24 22,94 89 ,70 48 ,24 22)))',0), 1, 0, 0, 1,159,703));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING((27 95,44 82 ,11 76 ,27 95), (97 1,93 23 ,52 87 ))',0), 1, 0, 0, 1,-405,-18));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((78 43,82 55 ,13 88 ,78 43))',0), 1, 0, 0, 1,474,458));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Collect(t0.geom, ST_PointFromText('POINT(83 86)',0))          FROM t0 As t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Collect(t0.geom, ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(POINT(32 44),LINESTRING(0 78,34 81 ,95 62 ,76 58 ,0 78)),POLYGON((55 44,73 20 ,31 54 ,64 30 ,54 71 ,55 44)))',0))          FROM t0 As t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Scale(t.geom, 3, 2)          FROM t0 As t         WHERE t.id = 5;  INSERT INTO t0 (id, geom)          SELECT 8, ST_GeometryN(t0.geom, 0)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Normalize(t.geom)          FROM t0 As t         WHERE t.id = 2;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}