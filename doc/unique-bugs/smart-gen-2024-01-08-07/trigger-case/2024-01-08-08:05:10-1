{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(42 66)',0), 1, 0, 0, 1,565,-74));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT((90 4),(54 80),(89 16),(47 69)))',0), 1, 0, 0, 1,1000,462));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((93 31),(33 25),(10 98),(96 26),(56 13),(90 79),(22 84),(39 21),(80 90))',0), 1, 0, 0, 1,537,326));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING(76 26,98 19 ,77 48 ,76 26)',0), 1, 0, 0, 1,631,699));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Scale(t.geom, 2, 4)          FROM t0 As t         WHERE t.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(t0.geom, ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING(93 2,30 71 ,76 28 ,89 85 ,16 38 ))',0))          FROM t0 As t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 7, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 2         and t2.id = 8;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,0, 2, 2, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 2, 2);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}