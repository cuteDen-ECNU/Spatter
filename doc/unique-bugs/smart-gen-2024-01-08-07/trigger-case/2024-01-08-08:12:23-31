{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Intersects(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "None", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_3DIntersects(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON EMPTY,MULTILINESTRING EMPTY)',0), 1, 0, 0, 1,903,155));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-959,82));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((40 17,23 53 ,19 53 ,7 12 ,40 17)),((58 62,34 39 ,31 10 ,70 14 ,58 62)),((50 38,16 91 ,28 47 ,18 31 ,50 38)),((79 76,65 89 ,46 41 ,36 73 ,79 76)))',0), 1, 0, 0, 1,-563,678));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING((54 74,28 53 ,54 74))',0), 1, 0, 0, 1,499,-749));  INSERT INTO t0 (id, geom)          SELECT 4, ST_ForcePolygonCCW(t0.geom)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)         SELECT 5, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 7 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 6         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Scale(t.geom, 4, 2)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 9, ST_ForcePolygonCCW(t0.geom)           FROM t0         WHERE t0.id = 5;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),50, 0, 0, 0, 0, 50, 0, 50, 0, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 50, 50);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}