{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(8,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((30 18,20 50 ,3 80 ,59 4 ,30 18)),((42 39,44 11 ,56 42 ,87 13 ,42 39)),((64 0,39 49 ,9 88 ,16 67 ,64 0)),((55 53,54 57 ,68 9 ,55 74 ,55 53)))',0), 1, 0, 0, 1,84,569));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT((4 84),(27 37),(54 85),(41 84),(16 70))',0), 1, 0, 0, 1,-249,-978));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,806,-283));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((1 17,39 18 ,48 85 ,1 17))',0), 1, 0, 0, 1,-843,133));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 5, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Multi(t.geom)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)          SELECT 7, ST_FlipCoordinates(t.geom)          FROM t0 As t         WHERE t.id = 5;  INSERT INTO t0 (id, geom)          SELECT 8, ST_FlipCoordinates(t.geom)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 9, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 6;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}