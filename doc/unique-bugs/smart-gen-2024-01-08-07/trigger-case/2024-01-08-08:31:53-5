{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 760)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(18,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 760)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(26,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((56 95),(22 36),(22 36),(34 38),(83 94))',0), 1, 0, 0, 1,-437,-592));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POLYGON((92 9,40 5 ,87 30 ,86 21 ,1 62 ,54 43 ,51 35 ,92 9))',0), 1, 0, 0, 1,430,879));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((1 59),(49 91),(82 77),(59 56))', 0)), 1, 0, 0, 1,866,-896));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPointFromText('MULTIPOINT((98 45),(68 18),(33 77))',0), 1, 0, 0, 1,302,-655));  INSERT INTO t0 (id, geom)         SELECT 4, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 5, ST_ForcePolygonCW(t0.geom)          FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 6 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 4         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 7, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Scale(t.geom, 2, 4)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)          SELECT 9, ST_ForceCollection(t.geom)          FROM t0 As t         WHERE t.id = 7;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}