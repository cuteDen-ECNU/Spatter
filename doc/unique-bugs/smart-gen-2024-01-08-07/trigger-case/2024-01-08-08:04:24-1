{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 445)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_3DDWithin(a1.geom, a2.geom, 445)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(4,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOLYGON(((85 80,10 44 ,30 4 ,49 92 ,8 7 ,85 80)),((6 91,5 47 ,44 69 ,96 54 ,5 18 ,6 91))),LINESTRING(0 42,66 35 ,90 20 ,29 47 ))',0), 1, 0, 0, 1,-353,-730));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(40 65)',0), 1, 0, 0, 1,429,467));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT EMPTY', 0)), 1, 0, 0, 1,650,-561));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POLYGON((47 85,64 39 ,66 47 ,76 90 ,61 88 ,83 32 ,49 94 ,72 81 ,66 12 ,47 85))',0), 1, 0, 0, 1,457,460));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Collect(t0.geom, ST_MPointFromText('MULTIPOINT((69 5),(83 4),(75 31),(60 67),(39 33),(38 4),(59 68),(95 92))',0))          FROM t0 As t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 6, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 5;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 5         and t2.id = 4;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Collect(t0.geom, ST_MPolyFromText('MULTIPOLYGON EMPTY',0))          FROM t0 As t0         WHERE t0.id = 5;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Affine(t.geom, 5, -3, 10, 8, 0, 0)          FROM t0 As t         WHERE t.id = 8;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),109, 60, 12, 12, -45, 116, -60, 100, 45, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 125, 125);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}