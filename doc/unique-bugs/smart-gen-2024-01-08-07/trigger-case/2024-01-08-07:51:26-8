{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(8,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING(59 99,98 44 ,74 28 ,59 99)',0), 1, 0, 0, 1,98,739));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-989,399));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING((87 28,82 28 ,16 53 ), (44 20,1 48 ,72 18 ,44 20))',0), 1, 0, 0, 1,-917,932));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((7 33,13 53 ,20 22 ,46 54 ,7 33)),((97 21,31 31 ,46 84 ,91 22 ,97 21)),((99 35,18 60 ,57 13 ,20 7 ,99 35)),((94 34,40 25 ,23 83 ,2 44 ,94 34)))',0), 1, 0, 0, 1,955,149));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Scale(t.geom, 2, 2)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 8, ST_GeometryN(t0.geom, 9)           FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)         SELECT 9, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 8;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Multi(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}