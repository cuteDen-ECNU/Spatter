{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(20,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PolygonFromText('POLYGON((25 17,85 29 ,75 0 ,48 45 ,27 74 ,36 97 ,24 23 ,69 24 ,27 92 ,25 17))',0), 1, 0, 0, 1,-840,557));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT((55 70),(31 99),(78 12),(69 98),(36 36),(69 80),(39 26),(56 84),(76 86),(42 54))',0), 1, 0, 0, 1,-23,12));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,193,-309));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((43 42,54 58 ,100 66 ,44 18 ,66 62 ,43 42)),((43 81,31 27 ,100 8 ,8 1 ,76 42 ,43 81)),((13 47,9 34 ,19 12 ,15 26 ,70 25 ,13 47)))',0), 1, 0, 0, 1,990,924));  INSERT INTO t0 (id, geom)          SELECT 4, ST_RemoveRepeatedPoints(t.geom)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Affine(t.geom, -2, -6, 10, -10, 0, 0)          FROM t0 As t         WHERE t.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)         SELECT 7, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Scale(t.geom, 4, 3)          FROM t0 As t         WHERE t.id = 4;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 9 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 1         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Multi(t.geom)          FROM t0 As t         WHERE t.id = 4;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ARRAY[geom]);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}