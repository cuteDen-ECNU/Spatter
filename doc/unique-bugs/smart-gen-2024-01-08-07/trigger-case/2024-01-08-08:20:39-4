{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 64)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(12,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 64)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(9,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON((42 87,35 85 ,21 83 ,100 86 ,7 63 ,42 87)))',0), 1, 0, 0, 1,58,-911));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING EMPTY)',0), 1, 0, 0, 1,-128,-391));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(35 48,92 70 ,94 69 ,35 48)',0), 1, 0, 0, 1,440,244));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(55 21,91 64 ,25 88 ,43 20 ,53 97 ),GEOMETRYCOLLECTION(MULTIPOINT((37 69),(86 8),(95 67),(26 51))))',0), 1, 0, 0, 1,287,-246));  INSERT INTO t0 (id, geom)          SELECT 4, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_FlipCoordinates(t.geom)          FROM t0 As t         WHERE t.id = 0;  INSERT INTO t0 (id, geom)          SELECT 6, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Scale(t.geom, 2, 4)          FROM t0 As t         WHERE t.id = 5;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Scale(t.geom, 4, 2)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(t0.geom, ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0))          FROM t0 As t0         WHERE t0.id = 2;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}