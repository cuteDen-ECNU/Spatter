{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((33 78),(97 99),(16 63),(45 85),(92 29),(57 64),(35 59),(27 65),(6 8))',0), 1, 0, 0, 1,707,-479));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((38 89,53 42 ,98 54 ,4 17 ,64 55 ,18 87 ,9 74 ,7 28 ,89 6 ,38 89))',0), 1, 0, 0, 1,-460,-203));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(63 40,83 9 ,8 50 ,63 40)',0), 1, 0, 0, 1,-167,-279));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-398,260));  INSERT INTO t0 (id, geom)         SELECT 4, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 5 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 2         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 5, ST_GeometryN(t0.geom, 10)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom) SELECT 6, NULL;  INSERT INTO t0 (id, geom)          SELECT 7, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Affine(t.geom, 2, 6, 6, -4, 0, 0)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 9, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Affine(t.geom, 6, -8, 10, 6, 0, 0)          FROM t0 As t         WHERE t.id = 0;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,3, 4, 4, -3, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 5, 5);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}