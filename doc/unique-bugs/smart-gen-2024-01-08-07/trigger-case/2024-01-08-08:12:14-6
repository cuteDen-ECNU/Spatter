{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 420)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(24,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 420)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(22,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOLYGON(((82 94,47 82 ,67 91 ,32 28 ,82 94)),((83 62,46 67 ,19 92 ,65 5 ,83 62)),((16 37,61 43 ,25 56 ,44 91 ,16 37)),((89 17,63 31 ,61 31 ,13 93 ,89 17))),MULTIPOINT((47 90),(85 73)))',0), 1, 0, 0, 1,303,338));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING(90 61,20 37 ,41 63 ,90 61)',0), 1, 0, 0, 1,61,-97));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(61 79)',0), 1, 0, 0, 1,231,-324));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((63 43),(22 94))', 0)), 1, 0, 0, 1,-34,827));  INSERT INTO t0 (id, geom)          SELECT 4, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_CollectionHomogenize(t.geom)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Scale(t.geom, 4, 4)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, ST_MPointFromText('MULTIPOINT EMPTY',0))          FROM t0 As t0         WHERE t0.id = 6;  INSERT INTO t0 (id, geom)          SELECT 8, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 6;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 2         and t2.id = 3;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}