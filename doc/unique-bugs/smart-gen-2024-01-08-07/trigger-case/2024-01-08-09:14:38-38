{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 110)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(4,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_3DDWithin(a1.geom, a2.geom, 110)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PolygonFromText('POLYGON((23 30,59 62 ,48 3 ,4 50 ,84 17 ,72 66 ,9 91 ,15 85 ,30 26 ,23 30))',0), 1, 0, 0, 1,575,710));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING(62 1,23 91 ,68 84 )',0), 1, 0, 0, 1,380,-829));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,862,-866));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((2 8,50 51 ), (53 73,99 23 ))',0), 1, 0, 0, 1,504,-331));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Affine(t.geom, 4, 3, 2, 0, 0, 0)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)         SELECT 5, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 2         and t2.id = 2;  INSERT INTO t0 (id, geom)         SELECT 7, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 8, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 6;  INSERT INTO t0 (id, geom)          SELECT 9, ST_RemoveRepeatedPoints(t.geom)          FROM t0 As t         WHERE t.id = 3;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),109, 60, 12, 12, -45, 116, -60, 100, 45, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 125, 125);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}