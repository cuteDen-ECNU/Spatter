{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(14,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,103,858));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((60 1,35 15 ,42 6 ,29 6 ,60 1)),((53 65,47 58 ,37 36 ,39 95 ,53 65)),((87 25,2 95 ,79 90 ,36 23 ,87 25)))',0), 1, 0, 0, 1,513,501));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((19 52),(58 39),(90 88))',0), 1, 0, 0, 1,-192,198));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING(94 6,79 57 ,70 49 ,94 6)',0), 1, 0, 0, 1,81,90));  INSERT INTO t0 (id, geom)          SELECT 4, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 4         and t2.id = 0;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 6 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 5         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 6, ST_PointOnSurface(t.geom)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Scale(t.geom, 2, 4)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 9, ST_ForcePolygonCCW(t0.geom)           FROM t0         WHERE t0.id = 3;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}