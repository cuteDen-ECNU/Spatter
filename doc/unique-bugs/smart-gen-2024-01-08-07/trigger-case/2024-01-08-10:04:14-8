{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 782)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(32,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 782)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(14,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POINT(94 76)',0), 1, 0, 0, 1,678,261));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POLYGON EMPTY',0), 1, 0, 0, 1,-603,-599));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(40 84,67 42 ,31 43 )',0), 1, 0, 0, 1,-172,137));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((98 34,72 75 ,98 34), (50 56,35 66 ))',0), 1, 0, 0, 1,463,-835));  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 4 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 2         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 5, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 6, ST_ForcePolygonCCW(t0.geom)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, ST_MPolyFromText('MULTIPOLYGON EMPTY',0))          FROM t0 As t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 8, ST_ForcePolygonCCW(t0.geom)           FROM t0         WHERE t0.id = 6;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 7         and t2.id = 6;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}