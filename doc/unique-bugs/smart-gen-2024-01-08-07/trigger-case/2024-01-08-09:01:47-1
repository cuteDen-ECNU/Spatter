{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(1 80)',0), 1, 0, 0, 1,-438,-778));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING((53 20,30 97 ,34 85 ,53 20), (16 13,16 55 ,69 20 ,16 13))',0), 1, 0, 0, 1,-644,392));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT EMPTY,MULTILINESTRING EMPTY)',0), 1, 0, 0, 1,566,552));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(59 59),MULTIPOINT((36 40),(61 60),(27 98),(62 55)))',0), 1, 0, 0, 1,640,-638));  INSERT INTO t0 (id, geom)          SELECT 4, ST_PointOnSurface(t.geom)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_GeometryN(t0.geom, 8)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Scale(t.geom, 3, 3)          FROM t0 As t         WHERE t.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 5;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Collect(t0.geom, ST_MPointFromText('MULTIPOINT((17 40),(22 31),(67 85),(29 16),(6 9),(62 14),(72 81),(97 16))',0))          FROM t0 As t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 2;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Multi(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}