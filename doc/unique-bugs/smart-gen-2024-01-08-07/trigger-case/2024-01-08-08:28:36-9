{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 49)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 49)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,478,201));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(45 82)',0), 1, 0, 0, 1,49,397));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((53 57),(18 11))',0), 1, 0, 0, 1,338,708));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING(10 40,16 64 ,13 4 )',0), 1, 0, 0, 1,641,-896));  INSERT INTO t0 (id, geom)          SELECT 4, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)         SELECT 5, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 5;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, ST_GeomFromText('MULTIPOLYGON EMPTY',0))          FROM t0 As t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 8, ST_RemoveRepeatedPoints(t.geom)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 9, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 5;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}