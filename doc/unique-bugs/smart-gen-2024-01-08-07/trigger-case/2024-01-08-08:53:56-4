{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POLYGON((17 79,43 39 ,61 71 ,34 5 ,41 30 ,73 4 ,32 51 ,2 63 ,94 57 ,17 79))',0), 1, 0, 0, 1,244,-752));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(86 29))',0), 1, 0, 0, 1,692,642));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,652,-172));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((60 17,3 18 ,51 84 ,68 6 ,60 17)),((0 92,97 21 ,65 82 ,97 32 ,0 92)),((19 64,12 49 ,72 14 ,55 0 ,19 64)),((4 100,41 33 ,26 4 ,27 12 ,4 100)))',0), 1, 0, 0, 1,-882,243));  INSERT INTO t0 (id, geom)          SELECT 4, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 3         and t2.id = 7;  INSERT INTO t0 (id, geom)          SELECT 9, ST_GeometryN(t0.geom, 0)           FROM t0         WHERE t0.id = 6;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}