{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING((36 59,52 16 ,36 59), (97 74,71 49 )),MULTILINESTRING((3 63,91 41 )))',0), 1, 0, 0, 1,-933,226));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((21 2,58 79 ,34 27 ,38 64 ,72 40 ,21 2)),((90 74,55 12 ,63 97 ,3 66 ,75 30 ,90 74)),((86 98,1 38 ,29 64 ,4 36 ,2 47 ,86 98)),((33 8,23 31 ,91 28 ,38 39 ,61 84 ,33 8)))',0), 1, 0, 0, 1,826,-21));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(64 10,16 28 ,80 71 )',0), 1, 0, 0, 1,-426,748));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,186,813));  INSERT INTO t0 (id, geom)          SELECT 4, ST_GeometryN(t0.geom, 1)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Multi(t.geom)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Affine(t.geom, 10, -9, 5, 2, 0, 0)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)          SELECT 7, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 8 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 3         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Affine(t.geom, -3, -5, -8, -8, 0, 0)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 9 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 0         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Affine(t.geom, -5, -10, -2, 5, 0, 0)          FROM t0 As t         WHERE t.id = 0;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}