{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(4,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(10,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POINT(30 18)',0), 1, 0, 0, 1,-835,79));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((85 5,63 11 ,66 8 ,84 64 ,85 5)),((68 11,19 49 ,66 57 ,45 97 ,68 11)),((27 64,16 77 ,48 67 ,19 37 ,27 64)),((40 15,78 73 ,22 93 ,76 45 ,40 15)))',0), 1, 0, 0, 1,717,997));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-916,-984));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POINT(10 43)',0), 1, 0, 0, 1,523,-782));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 2         and t2.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Multi(t.geom)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 4         and t2.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 5         and t2.id = 1;  INSERT INTO t0 (id, geom)         SELECT 8, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 9, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 0;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}