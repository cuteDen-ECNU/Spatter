{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 111)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(8,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_3DDWithin(a1.geom, a2.geom, 111)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(6,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING(80 68,21 5 ,85 32 ,80 68)',0), 1, 0, 0, 1,-598,301));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(44 0,88 33 ,36 38 ,44 0)',0), 1, 0, 0, 1,704,-468));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((76 6),(80 44),(77 79),(43 88),(48 59),(51 52))',0), 1, 0, 0, 1,-689,-38));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MLineFromText('MULTILINESTRING((94 8,22 72 ), (21 21,67 3 ))',0), 1, 0, 0, 1,791,-290));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)         SELECT 6, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 8, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(t0.geom, ST_MPolyFromText('MULTIPOLYGON(((83 77,86 19 ,60 61 ,83 77)),((20 5,71 12 ,79 79 ,20 5)),((67 12,99 74 ,63 58 ,67 12)))',0))          FROM t0 As t0         WHERE t0.id = 0;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),109, 60, 12, 12, -45, 116, -60, 100, 45, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 125, 125);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}