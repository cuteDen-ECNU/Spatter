{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(20,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-162,-805));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((61 34),(55 58))', 0)), 1, 0, 0, 1,-692,-414));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((85 22,47 31 ,54 71 ,46 58 ,22 12 ,85 22)),((66 45,11 35 ,100 29 ,29 93 ,48 17 ,66 45)))',0), 1, 0, 0, 1,176,893));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT EMPTY)',0), 1, 0, 0, 1,981,732));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Affine(t.geom, 4, 2, -8, 4, 0, 0)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Affine(t.geom, 8, -1, 9, 4, 0, 0)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 4         and t2.id = 3;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 3         and t2.id = 5;  INSERT INTO t0 (id, geom)         SELECT 9, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 5;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(geom,3, 4, 4, -3, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 5, 5);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}