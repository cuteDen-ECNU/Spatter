{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(14,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((62 52,99 18 ), (43 11,21 22 ,43 11))',0), 1, 0, 0, 1,-911,-693));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,160,123));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING((6 17,2 85 ,6 17), (83 12,47 91 ))',0), 1, 0, 0, 1,490,825));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((79 48,39 7 ,56 75 ,75 13 ,79 48)),((24 32,95 29 ,3 38 ,74 83 ,24 32)),((13 18,56 95 ,64 89 ,46 58 ,13 18)))',0), 1, 0, 0, 1,-798,-146));  INSERT INTO t0 (id, geom)          SELECT 4, ST_GeometryN(t0.geom, 4)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 5, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 6, ST_ForcePolygonCCW(t0.geom)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, ST_GeomFromText('MULTIPOLYGON EMPTY',0))          FROM t0 As t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 7;  INSERT INTO t0 (id, geom)          SELECT 9, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 1;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}