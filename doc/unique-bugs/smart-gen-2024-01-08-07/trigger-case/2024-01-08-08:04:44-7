{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_LineCrossingDirection(a1.geom, a2.geom) > 2          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_LineCrossingDirection(a1.geom, a2.geom) > 2          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "None", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING(91 97,72 63 ,56 56 ,91 97)',0), 1, 0, 0, 1,-62,164));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,-753,-294));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-395,742));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((21 31,81 80 ,28 24 ,88 86 ,21 31)),((83 2,57 50 ,41 88 ,2 39 ,83 2)),((78 59,40 57 ,73 91 ,21 42 ,78 59)),((66 30,45 31 ,34 5 ,21 33 ,66 30)))',0), 1, 0, 0, 1,693,-676));  INSERT INTO t0 (id, geom)         SELECT 4, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 5, ST_CollectionHomogenize(t.geom)          FROM t0 As t         WHERE t.id = 0;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Scale(t.geom, 3, 2)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Affine(t.geom, 7, 7, 4, -7, 0, 0)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)         SELECT 8, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 2         and t2.id = 8;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Multi(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}