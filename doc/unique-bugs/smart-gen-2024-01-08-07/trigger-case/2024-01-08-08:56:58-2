{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 527)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(46,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 527)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(45,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((2 90),(55 56),(86 34),(4 38),(62 10),(92 89),(66 93),(25 50),(89 63),(22 43),(34 9))', 0)), 1, 0, 0, 1,-457,-274));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING((61 18,18 31 ,65 57 ,61 18))',0), 1, 0, 0, 1,434,-636));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(14 75)',0), 1, 0, 0, 1,28,147));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT((30 71),(17 67),(45 17),(11 13),(16 15),(7 81))',0), 1, 0, 0, 1,-875,-597));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Collect(t0.geom, ST_GeomFromText('MULTILINESTRING((12 97,93 29 ,98 99 ), (88 20,91 32 ,36 5 ))',0))          FROM t0 As t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 5, ST_GeometryN(t0.geom, 10)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Scale(t.geom, 3, 3)          FROM t0 As t         WHERE t.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 8, ST_GeometryN(t0.geom, 2)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(t0.geom, ST_LineFromText('LINESTRING EMPTY',0))          FROM t0 As t0         WHERE t0.id = 8;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}