{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(8,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(75 77)',0), 1, 0, 0, 1,-742,-146));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,264,-230));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((49 62,3 77 ,4 6 ,77 72 ,49 62)),((22 84,92 100 ,89 14 ,27 31 ,22 84)),((39 82,81 34 ,98 58 ,63 13 ,39 82)),((70 22,51 36 ,87 98 ,6 51 ,70 22)))',0), 1, 0, 0, 1,7,495));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(3 68),LINESTRING(4 35,90 27 ,37 70 ,92 4 ,84 85 ))',0), 1, 0, 0, 1,-312,355));  INSERT INTO t0 (id, geom)          SELECT 4, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Scale(t.geom, 3, 2)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)         SELECT 6, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)         SELECT 7, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 8 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 2         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 8, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 6;  INSERT INTO t0 (id, geom)          SELECT 9, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 3;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ARRAY[geom]);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}