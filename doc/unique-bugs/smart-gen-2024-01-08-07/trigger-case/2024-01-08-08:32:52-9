{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON((10 1,90 2 ,36 17 ,38 84 ,10 1)))',0), 1, 0, 0, 1,985,724));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTILINESTRING((59 77,59 12 ,59 77), (74 97,86 1 ,74 97)))',0), 1, 0, 0, 1,-240,654));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(11 6)',0), 1, 0, 0, 1,392,145));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,468,-384));  INSERT INTO t0 (id, geom)         SELECT 4, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 5 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 3         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Collect(t0.geom, ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING EMPTY)',0))          FROM t0 As t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(t0.geom, ST_GeomFromText('MULTIPOLYGON EMPTY',0))          FROM t0 As t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Multi(t.geom)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 8 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 1         ) AS sub_query;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}