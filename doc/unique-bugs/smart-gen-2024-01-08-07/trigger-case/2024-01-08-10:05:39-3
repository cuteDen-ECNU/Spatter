{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Intersects(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_3DIntersects(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(4,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,921,595));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((64 41,32 45 ,40 67 ,2 73 ,26 67 ,45 2 ,60 58 ,24 22 ,0 58 ,0 69 ,64 41))',0), 1, 0, 0, 1,-186,-544));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING((95 25,0 53 ), (73 64,32 94 ,73 64))',0), 1, 0, 0, 1,-898,-116));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTILINESTRING((30 40,99 58 ), (94 29,20 69 ,94 29)),GEOMETRYCOLLECTION(POINT(63 61),LINESTRING(4 44,55 99 ,27 77 ,68 86 )))',0), 1, 0, 0, 1,-131,0));  INSERT INTO t0 (id, geom)          SELECT 4, ST_ForcePolygonCCW(t0.geom)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Affine(t.geom, 0, -4, 7, 9, 0, 0)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_GeometryN(t0.geom, 10)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Scale(t.geom, 2, 2)          FROM t0 As t         WHERE t.id = 4;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Scale(t.geom, 3, 2)          FROM t0 As t         WHERE t.id = 5;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),32, 24, 30, -24, -18, 40, -30, 40, 0, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 50, 50);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}