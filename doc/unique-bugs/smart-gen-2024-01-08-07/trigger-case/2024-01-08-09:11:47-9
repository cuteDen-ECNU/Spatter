{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(42,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((14 42,39 23 ,63 28 ))',0), 1, 0, 0, 1,308,-508));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-662,275));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(32 7,68 62 ,33 39 ,32 7)',0), 1, 0, 0, 1,-79,613));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,314,194));  INSERT INTO t0 (id, geom)          SELECT 4, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 5, ST_GeometryN(t0.geom, 1)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_ForcePolygonCW(t0.geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 8, ST_RemoveRepeatedPoints(t.geom)          FROM t0 As t         WHERE t.id = 6;  INSERT INTO t0 (id, geom)          SELECT 9, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 3;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForceCollection(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}