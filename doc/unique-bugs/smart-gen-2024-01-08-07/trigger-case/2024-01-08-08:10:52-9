{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-991,497));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0), 1, 0, 0, 1,495,64));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING((94 91,28 56 ))',0), 1, 0, 0, 1,-606,545));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_LineFromText('LINESTRING(68 74,75 65 ,15 77 )',0), 1, 0, 0, 1,951,259));  INSERT INTO t0 (id, geom)          SELECT 4, ST_ForceCollection(t.geom)          FROM t0 As t         WHERE t.id = 0;  INSERT INTO t0 (id, geom)          SELECT 5, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(t0.geom, ST_GeomFromText('MULTIPOLYGON(((56 94,92 45 ,76 20 ,77 27 ,56 94)),((30 16,69 41 ,99 25 ,24 68 ,30 16)),((1 75,6 20 ,60 9 ,81 85 ,1 75)),((49 33,44 23 ,46 66 ,28 88 ,49 33)))',0))          FROM t0 As t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)         SELECT 7, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Collect(t0.geom, ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTIPOINT((38 79),(71 48)))',0))          FROM t0 As t0         WHERE t0.id = 5;  INSERT INTO t0 (id, geom)          SELECT 9, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Affine(t.geom, 7, 1, 6, 7, 0, 0)          FROM t0 As t         WHERE t.id = 6;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}