{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(8,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POINT(68 92)',0), 1, 0, 0, 1,199,-822));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((22 18,16 59 ,21 33 ,62 8 ,28 82 ,26 7 ,65 39 ,44 67 ,22 18))',0), 1, 0, 0, 1,-202,-251));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PolygonFromText('POLYGON((78 4,39 100 ,26 31 ,84 77 ,89 76 ,78 4))',0), 1, 0, 0, 1,-359,546));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,600,-747));  INSERT INTO t0 (id, geom) SELECT 4, NULL;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)         SELECT 6, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 6         and t2.id = 6;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Collect(t0.geom, ST_GeomFromText('MULTIPOLYGON(((97 13,83 11 ,80 1 ,77 12 ,41 100 ,97 13)),((55 10,41 30 ,63 58 ,37 76 ,25 59 ,55 10)),((99 7,84 6 ,44 66 ,39 39 ,0 38 ,99 7)),((12 57,33 70 ,53 40 ,100 79 ,84 65 ,12 57)))',0))          FROM t0 As t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom) SELECT 9, NULL;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_RemoveRepeatedPoints(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}