{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_LineCrossingDirection(a1.geom, a2.geom) > -3          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "None", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_LineCrossingDirection(a1.geom, a2.geom) > -3          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((46 23,65 85 ,6 98 ,91 34 ,46 23)),((16 71,15 12 ,54 55 ,38 20 ,16 71)),((7 56,59 28 ,46 50 ,76 6 ,7 56)),((7 44,97 67 ,10 54 ,68 22 ,7 44)))',0), 1, 0, 0, 1,-257,359));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_LineFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,64,929));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(66 45,100 2 ,15 80 ,66 45)',0), 1, 0, 0, 1,395,-914));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((90 55,44 62 ,0 42 ,57 50 ,78 66 ,90 55)),((41 19,76 17 ,30 31 ,25 1 ,72 24 ,41 19)),((86 90,47 73 ,37 87 ,8 23 ,22 15 ,86 90)))',0), 1, 0, 0, 1,-293,-569));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Scale(t.geom, 4, 4)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 5 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 4         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(t0.geom, ST_MPolyFromText('MULTIPOLYGON EMPTY',0))          FROM t0 As t0         WHERE t0.id = 5;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 4         and t2.id = 3;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Normalize(t.geom)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)          SELECT 9, ST_GeometryN(t0.geom, 4)           FROM t0         WHERE t0.id = 4;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}