{"query1": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DWithin(a1.geom, a2.geom, 750)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(4,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 750)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(3,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((99 6,66 46 ,99 10 ,99 6))',0), 1, 0, 0, 1,164,-437));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT((12 60),(74 81),(20 63))',0), 1, 0, 0, 1,-380,755));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT EMPTY,GEOMETRYCOLLECTION(MULTIPOINT((82 49),(77 78))))',0), 1, 0, 0, 1,-30,25));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((46 39,74 97 ,85 26 ,93 60 ,46 39)),((85 70,89 4 ,50 74 ,66 94 ,85 70)))',0), 1, 0, 0, 1,295,899));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 3         and t2.id = 0;  INSERT INTO t0 (id, geom)         SELECT 5, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(t0.geom, ST_GeomFromText('GEOMETRYCOLLECTION EMPTY',0))          FROM t0 As t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Affine(t.geom, -6, -9, 9, -6, 0, 0)          FROM t0 As t         WHERE t.id = 7;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 8         and t2.id = 8;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}