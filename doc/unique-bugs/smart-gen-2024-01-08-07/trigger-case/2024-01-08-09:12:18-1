{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(12,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOINT((34 57),(81 86),(25 5),(87 83),(98 62),(87 57),(50 57),(59 38),(76 43),(63 62))',0), 1, 0, 0, 1,628,651));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(37 39)',0), 1, 0, 0, 1,825,506));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PolygonFromText('POLYGON EMPTY',0), 1, 0, 0, 1,848,366));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((61 14,23 36 ,8 61 ,73 87 ,61 14)),((15 53,33 44 ,5 46 ,76 84 ,15 53)),((98 75,89 42 ,16 56 ,17 64 ,98 75)),((43 38,39 27 ,20 3 ,23 0 ,43 38)))',0), 1, 0, 0, 1,843,973));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 5 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 2         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Affine(t.geom, -9, -3, -5, -4, 0, 0)          FROM t0 As t         WHERE t.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, ST_LineFromText('LINESTRING(4 77,56 8 ,18 86 )',0))          FROM t0 As t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 8, ST_GeometryN(t0.geom, 8)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Scale(t.geom, 4, 4)          FROM t0 As t         WHERE t.id = 3;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}