{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 69)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(4,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 69)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(3,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING(41 46,66 24 ,52 7 )',0), 1, 0, 0, 1,741,95));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((22 96,84 3 ,20 100 ,54 9 ,22 96)),((60 23,90 67 ,72 39 ,8 99 ,60 23)),((6 64,55 85 ,6 71 ,60 26 ,6 64)),((37 66,38 94 ,85 96 ,2 43 ,37 66)))',0), 1, 0, 0, 1,-276,-373));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('POINT(62 39)',0), 1, 0, 0, 1,-824,828));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('POLYGON((96 18,89 77 ,24 28 ,45 38 ,33 95 ,8 53 ,96 18))',0), 1, 0, 0, 1,-292,721));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Collect(t0.geom, ST_GeomFromText('MULTILINESTRING EMPTY',0))          FROM t0 As t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 0         and t2.id = 1;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 7, ST_ForcePolygonCW(t0.geom)          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 4         and t2.id = 1;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Affine(t.geom, -4, -9, -10, -2, 0, 0)          FROM t0 As t         WHERE t.id = 6;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Normalize(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}