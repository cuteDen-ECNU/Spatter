{"query1": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 997)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(7,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 997)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(10,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(22 46)',0), 1, 0, 0, 1,-922,461));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTILINESTRING((7 64,66 32 ,7 64))',0), 1, 0, 0, 1,-684,-555));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_LineFromText('LINESTRING(29 19,20 16 ,32 60 ,29 19)',0), 1, 0, 0, 1,753,-428));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((47 13),(56 26),(85 35),(61 71))', 0)), 1, 0, 0, 1,924,74));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Collect(t0.geom, ST_GeomFromText('POINT(0 65)',0))          FROM t0 As t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_ForcePolygonCW(t0.geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 7, ST_GeometryN(t0.geom, 0)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)         SELECT 8, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 7;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 9 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 0         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 9, ST_GeometryN(t0.geom, 9)           FROM t0         WHERE t0.id = 4;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}