{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 714)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(20,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_3DDWithin(a1.geom, a2.geom, 714)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(14,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT((51 56),(54 7),(88 9),(71 84),(1 87),(97 48),(80 47))',0), 1, 0, 0, 1,-752,-657));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POINT(20 92)',0), 1, 0, 0, 1,-912,-201));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING((69 87,36 8 ), (13 71,81 2 ))',0), 1, 0, 0, 1,599,340));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((56 16,81 12 ,63 98 ,47 54 ,75 23 ,1 11 ,56 16))',0), 1, 0, 0, 1,857,280));  INSERT INTO t0 (id, geom)          SELECT 4, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Multi(t.geom)          FROM t0 As t         WHERE t.id = 4;  INSERT INTO t0 (id, geom)         SELECT 6, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(POINT(8 35)),LINESTRING(58 71,70 30 ,86 14 ,38 69 ,3 65 ,58 71))',0))          FROM t0 As t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 8, ST_RemoveRepeatedPoints(t.geom)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 9 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 8         ) AS sub_query;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),32, 24, 30, -24, -18, 40, -30, 40, 0, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 50, 50);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}