{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(2,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_OrderingEquals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOLYGON EMPTY',0), 1, 0, 0, 1,-839,509));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('POLYGON((49 64,99 46 ,17 14 ,23 4 ,62 100 ,83 69 ,11 62 ,4 92 ,64 99 ,49 64))',0), 1, 0, 0, 1,403,911));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOINT((80 92),(2 44),(1 29),(57 94),(51 4),(55 98),(8 46),(78 77),(63 4))',0), 1, 0, 0, 1,-754,-390));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING((85 51,21 56 ,64 60 ))',0), 1, 0, 0, 1,300,-63));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Affine(t.geom, -5, 4, 10, 8, 0, 0)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Affine(t.geom, -3, 3, -3, 2, 0, 0)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 5;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Scale(t.geom, 2, 3)          FROM t0 As t         WHERE t.id = 0;  INSERT INTO t0 (id, geom)          SELECT 8, ST_PointOnSurface(t.geom)          FROM t0 As t         WHERE t.id = 4;  INSERT INTO t0 (id, geom)          SELECT 9, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)         SELECT 9, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 3;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}