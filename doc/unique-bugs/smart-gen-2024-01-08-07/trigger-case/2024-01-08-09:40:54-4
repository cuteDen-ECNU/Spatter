{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(8,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((16 78,51 33 ,35 93 ,63 18 ,16 78)),((0 70,26 57 ,50 88 ,10 88 ,0 70)),((31 58,39 95 ,52 10 ,18 20 ,31 58)),((43 45,6 61 ,73 57 ,0 58 ,43 45)))',0), 1, 0, 0, 1,412,-700));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT((4 39),(65 23),(74 40),(62 80),(19 95),(11 10),(36 36),(85 5))',0), 1, 0, 0, 1,367,43));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-899,256));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((68 79,55 39 ,36 52 ,15 100 ,71 31 ,77 9 ,8 3 ,49 44 ,66 26 ,68 79))',0), 1, 0, 0, 1,404,663));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 1         and t2.id = 5;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Affine(t.geom, -3, -4, 9, -10, 0, 0)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 8 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 2         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 8, ST_GeometryN(t0.geom, 9)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Scale(t.geom, 3, 2)          FROM t0 As t         WHERE t.id = 6;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}