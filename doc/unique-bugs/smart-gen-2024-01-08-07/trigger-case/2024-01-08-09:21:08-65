{"query1": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 312)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(12,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_3DDWithin(a1.geom, a2.geom, 312)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(8,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((67 54,52 96 ,60 68 ,67 54)),((20 66,38 74 ,32 97 ,20 66)))',0), 1, 0, 0, 1,-588,952));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MLineFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-305,543));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((39 35),(18 89))', 0)), 1, 0, 0, 1,-543,-238));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('LINESTRING(75 76,41 83 ,15 45 ,75 76)',0), 1, 0, 0, 1,-567,-730));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Affine(t.geom, 6, 6, -1, 7, 0, 0)          FROM t0 As t         WHERE t.id = 1;  INSERT INTO t0 (id, geom)         SELECT 5, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 6, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_GeometryN(t0.geom, 1)           FROM t0         WHERE t0.id = 6;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Collect(t0.geom, ST_GeomFromText('MULTIPOINT EMPTY',0))          FROM t0 As t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 4;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),50, 0, 0, 0, 0, 50, 0, 50, 0, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 50, 50);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}