{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_LineCrossingDirection(a1.geom, a2.geom) > -1          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_LineCrossingDirection(a1.geom, a2.geom) > -1          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "None", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POLYGON((47 28,63 32 ,10 55 ,80 83 ,99 83 ,32 20 ,26 12 ,95 17 ,78 76 ,90 100 ,47 28))',0), 1, 0, 0, 1,-15,-260));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING(16 20,57 95 ,4 96 )',0), 1, 0, 0, 1,-145,667));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING((29 12,53 91 ))',0), 1, 0, 0, 1,-619,734));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((80 54,32 83 ,67 78 ,72 2 ,45 88 ,80 54)),((94 91,3 93 ,27 33 ,1 12 ,14 49 ,94 91)),((52 63,28 24 ,49 10 ,36 51 ,4 32 ,52 63)),((18 88,70 77 ,34 30 ,49 71 ,7 79 ,18 88)))',0), 1, 0, 0, 1,988,879));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Affine(t.geom, -10, 0, -10, -5, 0, 0)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Normalize(t.geom)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 3         and t2.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_GeometryN(t0.geom, 5)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 8 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 0         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(t0.geom, ST_PointFromText('POINT(6 59)',0))          FROM t0 As t0         WHERE t0.id = 8;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}