{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 357)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(4,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 357)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(8,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING BTREE (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT((82 37),(59 95),(62 72),(98 97),(97 87),(98 46),(90 5),(6 95),(85 32),(28 53),(96 1))',0), 1, 0, 0, 1,-873,-522));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_ConvexHull(ST_MPointFromText('MULTIPOINT((4 93),(39 27),(86 85),(87 34),(54 43),(37 34),(60 50),(49 52))', 0)), 1, 0, 0, 1,307,-314));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,140,-635));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT((84 77),(63 81),(78 45),(64 16),(75 86),(9 19),(57 13),(8 84),(31 90),(60 29),(26 91))',0), 1, 0, 0, 1,-213,727));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Scale(t.geom, 3, 3)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Collect(t0.geom, ST_LineFromText('LINESTRING EMPTY',0))          FROM t0 As t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_FlipCoordinates(t.geom)          FROM t0 As t         WHERE t.id = 0;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 7 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 1         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 5         and t2.id = 1;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 4;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_CollectionHomogenize(geom);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}