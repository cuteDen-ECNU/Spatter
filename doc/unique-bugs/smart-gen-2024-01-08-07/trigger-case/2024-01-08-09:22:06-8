{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_Intersects(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(12,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_3DIntersects(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(10,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PolygonFromText('POLYGON((45 92,32 16 ,21 44 ,76 85 ,45 93 ,83 26 ,11 2 ,45 92))',0), 1, 0, 0, 1,-690,-9));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((100 22,27 53 ,89 38 ,100 22)),((16 28,22 19 ,58 11 ,16 28)))',0), 1, 0, 0, 1,308,-657));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_PointFromText('POINT(40 87)',0), 1, 0, 0, 1,180,509));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POLYGON EMPTY,GEOMETRYCOLLECTION(MULTILINESTRING((30 81,98 1 ,30 81), (64 39,91 92 ,64 39)),MULTIPOINT((73 33),(26 65),(67 24))))',0), 1, 0, 0, 1,-143,-259));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Normalize(t.geom)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Collect(t0.geom, ST_GeomFromText('MULTIPOLYGON EMPTY',0))          FROM t0 As t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Scale(t.geom, 2, 4)          FROM t0 As t         WHERE t.id = 0;  INSERT INTO t0 (id, geom)          SELECT 7, ST_GeometryN(t0.geom, 1)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 8 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 1         ) AS sub_query;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),109, 60, 12, 12, -45, 116, -60, 100, 45, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 125, 125);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}