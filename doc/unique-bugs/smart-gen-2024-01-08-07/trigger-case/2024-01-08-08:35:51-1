{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(8,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POINT(62 48)',0), 1, 0, 0, 1,532,-698));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-349,-842));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((14 92,16 18 ,98 61 ,2 87 ,14 92)),((71 43,15 10 ,68 19 ,48 37 ,71 43)),((77 18,36 76 ,58 48 ,74 37 ,77 18)))',0), 1, 0, 0, 1,-669,-239));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_PolygonFromText('POLYGON((2 91,26 47 ,36 58 ,69 93 ,2 91))',0), 1, 0, 0, 1,796,-688));  INSERT INTO t0 (id, geom)          SELECT 4, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 4, ST_Affine(t.geom, 2, 9, -10, -2, 0, 0)          FROM t0 As t         WHERE t.id = 0;  INSERT INTO t0 (id, geom)          SELECT 5, ST_ForcePolygonCW(t0.geom)          FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 6, ST_GeometryN(t0.geom, 5)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, ST_LineFromText('LINESTRING EMPTY',0))          FROM t0 As t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 9, ST_GeometryN(t0.geom, 3)           FROM t0         WHERE t0.id = 5;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}