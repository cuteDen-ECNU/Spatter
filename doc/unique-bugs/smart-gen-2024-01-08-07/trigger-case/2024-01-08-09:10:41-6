{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 855)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(30,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 855)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(28,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('MULTILINESTRING((1 63,87 48 ,90 39 ,1 63))',0), 1, 0, 0, 1,-382,-824));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((38 73,11 25 ,26 83 ,38 73)),((52 5,90 72 ,7 51 ,52 5)),((55 63,38 18 ,44 81 ,55 63)))',0), 1, 0, 0, 1,-205,126));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((23 94),(83 31),(20 37),(91 5),(69 7),(63 68),(70 49),(29 30),(96 58),(38 22))',0), 1, 0, 0, 1,-310,273));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(MULTIPOINT((97 1),(25 97)),POINT(78 2)),POINT(53 96)))',0), 1, 0, 0, 1,-652,-409));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)         SELECT 5, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 3         and t2.id = 0;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 7 - 1, sub_query.geom          FROM (         SELECT             (ST_DumpRings(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 4         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(ARRAY[t0.geom, t2.geom])          FROM t0 As t0, t0 As t2         WHERE t0.id = 3         and t2.id = 2;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Affine(t.geom, -4, -7, -8, 1, 0, 0)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 7;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}