{"query1": "SELECT COUNT(*)         FROM t1 As a1          LEFT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(0,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          LEFT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(20,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING GIST (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT((31 54),(88 14)),MULTIPOLYGON(((34 23,71 73 ,10 85 ,74 89 ,34 23)),((5 5,72 43 ,70 16 ,39 80 ,5 5)),((36 52,0 89 ,91 26 ,75 80 ,36 52)),((92 28,19 55 ,36 33 ,70 19 ,92 28))))',0), 1, 0, 0, 1,505,65));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(MULTILINESTRING((40 77,39 96 ,40 77)))',0), 1, 0, 0, 1,-265,726));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('LINESTRING(51 69,11 48 ,95 14 ,51 69)',0), 1, 0, 0, 1,-717,-682));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTILINESTRING EMPTY',0), 1, 0, 0, 1,-586,-361));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 5, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 6, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 8, ST_PointOnSurface(t.geom)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(t0.geom, ST_LineFromText('LINESTRING(79 76,97 42 ,50 52 ,79 76)',0))          FROM t0 As t0         WHERE t0.id = 2;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_FlipCoordinates(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}