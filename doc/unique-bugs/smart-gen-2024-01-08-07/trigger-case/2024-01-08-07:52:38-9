{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(4,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(2,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_PointFromText('POINT(30 9)',0), 1, 0, 0, 1,-198,-460));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('LINESTRING EMPTY',0), 1, 0, 0, 1,-780,-948));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTILINESTRING((5 40,51 26 ,65 60 ))',0), 1, 0, 0, 1,-593,-901));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(39 86,93 14 ,73 29 ,0 97 ,67 60 ),GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(LINESTRING(92 100,59 52 ,85 22 ,55 76 ,4 95 ,92 100)),MULTILINESTRING((23 0,83 70 ), (12 99,98 2 ,12 99))))',0), 1, 0, 0, 1,-148,-215));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Affine(t.geom, 9, 5, -3, 0, 0, 0)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Scale(t.geom, 2, 2)          FROM t0 As t         WHERE t.id = 2;  INSERT INTO t0 (id, geom)         SELECT 6, ST_ConvexHull(geom)          FROM t0         WHERE t0.id = 5;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, ST_MPolyFromText('MULTIPOLYGON EMPTY',0))          FROM t0 As t0         WHERE t0.id = 6;  INSERT INTO t0 (id, geom)          SELECT 8, ST_ForcePolygonCCW(t0.geom)           FROM t0         WHERE t0.id = 1;  INSERT INTO t0 (id, geom)          SELECT 9, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 3;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET valid = ST_IsValid(geom); "}