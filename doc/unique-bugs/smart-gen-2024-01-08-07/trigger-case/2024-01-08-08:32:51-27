{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DWithin(a1.geom, a2.geom, 111)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(26,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_3DDWithin(a1.geom, a2.geom, 111)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(24,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING HASH (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING HASH (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_GeomFromText('POINT(59 74)',0), 1, 0, 0, 1,309,-334));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PolygonFromText('POLYGON((38 91,18 72 ,6 54 ,45 53 ,81 23 ,78 56 ,72 81 ,38 91))',0), 1, 0, 0, 1,-70,-135));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(51 56))',0), 1, 0, 0, 1,-20,-394));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomCollFromText('GEOMETRYCOLLECTION(LINESTRING(91 40,30 20 ,92 6 ,85 71 ,92 83 ))',0), 1, 0, 0, 1,-951,911));  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 4 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 1         ) AS sub_query;  INSERT INTO t0 (id, geom)          SELECT 5, ST_BoundingDiagonal(t0.geom)         FROM t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 6, ST_ForcePolygonCCW(t0.geom)           FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Boundary(t0.geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 8, ST_ForcePolygonCW(t0.geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Collect(t0.geom, ST_MPolyFromText('MULTIPOLYGON EMPTY',0))          FROM t0 As t0         WHERE t0.id = 5;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Affine(ST_Force3D(geom),50, 0, 0, 0, 0, 50, 0, 50, 0, 0, 0, 0);  UPDATE t0 SET geom = ST_Scale(geom, 50, 50);  UPDATE t1 SET valid = t0.valid         FROM t0         WHERE t1.id = t0.id; "}