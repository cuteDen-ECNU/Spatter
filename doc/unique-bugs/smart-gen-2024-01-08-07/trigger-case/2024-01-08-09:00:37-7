{"query1": "SELECT COUNT(*)         FROM t0 As a1          JOIN t0 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 376)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(8,)]", "query2": "SELECT COUNT(*)         FROM t1 As a1          JOIN t1 As a2 ON ST_DFullyWithin(a1.geom, a2.geom, 376)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(14,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_LineFromText('LINESTRING(78 37,24 58 ,81 100 ,78 37)',0), 1, 0, 0, 1,-113,-232));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION EMPTY)',0), 1, 0, 0, 1,-579,-944));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_GeomFromText('MULTIPOLYGON(((73 64,66 85 ,31 4 ,73 64)),((26 43,27 10 ,23 6 ,26 43)),((90 94,63 49 ,95 38 ,90 94)))',0), 1, 0, 0, 1,-453,-716));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_GeomFromText('MULTIPOINT((56 98),(49 93))',0), 1, 0, 0, 1,-774,-456));  INSERT INTO t0 (id, geom)          SELECT 4, ST_CollectionHomogenize(t.geom)          FROM t0 As t         WHERE t.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_RemoveRepeatedPoints(t.geom)          FROM t0 As t         WHERE t.id = 0;  INSERT INTO t0 (id, geom)          SELECT 6, ST_GeometryN(t0.geom, 4)           FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 6         and t2.id = 1;  INSERT INTO t0 (id, geom)          SELECT 8, ST_Polygonize(t0.geom)           FROM t0         WHERE t0.id = 5;  INSERT INTO t0 (id, geom)         SELECT row_number() OVER () + 9 - 1, sub_query.geom         FROM (         SELECT             (ST_DUMP(geom)).geom AS geom          FROM t0 As t         WHERE t.id = 0         ) AS sub_query;  DELETE FROM t0 As a1 WHERE ST_IsEmpty(a1.geom) ;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_Collect(ST_PointOnSurface(geom), geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}