{"query1": "SELECT COUNT(*)         FROM t1 As a1          RIGHT OUTER JOIN t1 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res1": "[(6,)]", "query2": "SELECT COUNT(*)         FROM t0 As a1          RIGHT OUTER JOIN t0 As a2 ON ST_Equals(a1.geom, a2.geom)          WHERE  a1.valid = True and a2.valid = True and a1.id <> a2.id;", "res2": "[(0,)]", "t0_queries": "DROP TABLE IF EXISTS t0;  CREATE TABLE t0 (id int, geom geometry, valid boolean);  CREATE INDEX t0_idx ON t0 USING GIST (geom);  DROP TABLE IF EXISTS t1;  CREATE TABLE t1 (id int, geom geometry, valid boolean);  CREATE INDEX t1_idx ON t1 USING BTREE (geom);  INSERT INTO t0 (id, geom) VALUES (0,ST_Affine(ST_MPointFromText('MULTIPOINT EMPTY',0), 1, 0, 0, 1,-907,568));  INSERT INTO t0 (id, geom) VALUES (1,ST_Affine(ST_PointFromText('POINT(12 5)',0), 1, 0, 0, 1,599,715));  INSERT INTO t0 (id, geom) VALUES (2,ST_Affine(ST_MPointFromText('MULTIPOINT((48 29),(28 6),(38 63),(3 35),(88 92),(16 87),(75 48),(21 48),(21 20),(6 29),(97 9))',0), 1, 0, 0, 1,-982,-801));  INSERT INTO t0 (id, geom) VALUES (3,ST_Affine(ST_MPolyFromText('MULTIPOLYGON(((23 100,59 97 ,17 39 ,23 100)),((6 28,84 86 ,43 96 ,6 28)),((35 81,73 23 ,0 18 ,35 81)),((92 8,79 1 ,65 71 ,92 8)))',0), 1, 0, 0, 1,-392,284));  INSERT INTO t0 (id, geom)          SELECT 4, ST_Collect(t0.geom, ST_MPolyFromText('MULTIPOLYGON(((9 95,38 6 ,56 71 ,9 95)),((11 59,24 7 ,5 14 ,11 59)))',0))          FROM t0 As t0         WHERE t0.id = 3;  INSERT INTO t0 (id, geom)          SELECT 5, ST_Collect(t0.geom, t2.geom)          FROM t0 As t0, t0 As t2         WHERE t0.id = 1         and t2.id = 4;  INSERT INTO t0 (id, geom)          SELECT 6, ST_CollectionExtract(t0.geom)           FROM t0         WHERE t0.id = 0;  INSERT INTO t0 (id, geom)          SELECT 7, ST_SetPoint(t0.geom, 0, 'POINT(-1 1)')          FROM t0         WHERE t0.id = 2;  INSERT INTO t0 (id, geom)          SELECT 7, ST_Scale(t.geom, 4, 3)          FROM t0 As t         WHERE t.id = 0;  INSERT INTO t0 (id, geom)          SELECT 8, ST_ForcePolygonCW(t0.geom)          FROM t0         WHERE t0.id = 4;  INSERT INTO t0 (id, geom)          SELECT 9, ST_Affine(t.geom, -7, 3, -7, -4, 0, 0)          FROM t0 As t         WHERE t.id = 5;  UPDATE t0 SET valid = ST_IsValid(geom);  INSERT INTO t1 (id, geom) SELECT id, geom FROM t0;  UPDATE t1 SET geom = ST_ForcePolygonCW(geom);  UPDATE t1 SET valid = ST_IsValid(geom); "}